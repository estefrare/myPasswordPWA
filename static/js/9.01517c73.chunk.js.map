{"version":3,"sources":["redux/modules/auth/thunks.ts","components/shared/button/button.module.css","components/shared/modal/index.tsx","components/shared/text-input/index.tsx","components/shared/text-input/text-input.module.css","components/shared/animation/index.tsx","components/shared/animation/animation.module.css","components/shared/modal/modal.module.css","components/sign-up/sign-up.module.css","components/sign-up/sign-up.tsx","components/sign-up/index.ts","redux/modules/auth/actions.ts","components/shared/button/index.tsx"],"names":["loginWithFirebase","params","dispatch","a","ACTIONS","Firebase","app","auth","signInWithEmailAndPassword","email","trim","password","response","logout","localStorage","removeItem","signOut","signUpWithFirebase","createUserWithEmailAndPassword","module","exports","ModalComponent","props","open","title","detail","close","callback","submitting","children","okButton","className","styles","modalContainer","modal","body","line","buttons","onClick","button","onlyButton","disabled","TextInput","meta","input","label","placeholder","useState","isShowingPassword","setShowPassword","container","labelText","type","showButton","error","touched","errorText","Animation","id","options","background","color","value","fpsLimit","interactivity","detectsOn","events","enable","mode","onHover","resize","modes","bubble","distance","duration","opacity","size","push","quantity","repulse","particles","links","width","collisions","move","direction","outMode","random","speed","straight","number","density","value_area","shape","detectRetina","Login","isFetching","created","setCreated","history","useHistory","onSubmit","values","payload","code","FORM_ERROR","page","console","log","replace","logoContainer","logoTitle","logoSubtitle","render","handleSubmit","submitError","form","name","component","message","connect","state","bindActionCreators","Component","loginWithFirebaseFetching","action","TYPES","LOGIN_FIREBASE_FETCHING","loginWithFirebaseFulfilled","data","LOGIN_FIREBASE_FULFILLED","loginWithFirebaseRejected","LOGIN_FIREBASE_REJECTED","logoutFetching","LOGOUT_FETCHING","logoutFulfilled","LOGOUT_FULFILLED","logoutRejected","LOGOUT_REJECTED","setFingerPrint","SET_FINGER_PRINT","signUpWithFirebaseFetching","SIGN_UP_FIREBASE_FETCHING","signUpWithFirebaseFulfilled","SIGN_UP_FIREBASE_FULFILLED","signUpWithFirebaseRejected","SIGN_UP_FIREBASE_REJECTED","Button","theme","cx","whiteTheme","darkTheme","height","loading"],"mappings":"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","file":"static/js/9.01517c73.chunk.js","sourcesContent":["import * as TYPES from './types';\nimport * as ACTIONS from './actions';\nimport { ThunkDispatch } from 'redux-thunk';\nimport { DVPState } from 'redux/modules/index';\nimport { AnyAction } from 'redux';\nimport Firebase from 'helpers/firebase';\n\nexport const loginWithFirebase = (params: TYPES.LoginParams) =>\n  async (dispatch: ThunkDispatch<DVPState, {}, AnyAction>) => {\n    dispatch(ACTIONS.loginWithFirebaseFetching());\n    try {\n      const response: any = await Firebase.app.auth().signInWithEmailAndPassword(params.email.trim(), params.password.trim());\n      return dispatch(ACTIONS.loginWithFirebaseFulfilled(response, params.password.trim()));\n    }\n    catch (error) {\n      return dispatch(ACTIONS.loginWithFirebaseRejected(error));\n    }\n  };\n\nexport const logout: any = () => async (dispatch: ThunkDispatch<DVPState, {}, AnyAction>) => {\n  dispatch(ACTIONS.logoutFetching());\n  try {\n    await localStorage.removeItem('users');\n    await Firebase.app.auth().signOut();\n    return dispatch(ACTIONS.logoutFulfilled());\n  }\n  catch (error) {\n    return dispatch(ACTIONS.logoutRejected(error));\n  }\n};\n\nexport const signUpWithFirebase = (params: TYPES.LoginParams) =>\n  async (dispatch: ThunkDispatch<DVPState, {}, AnyAction>) => {\n    dispatch(ACTIONS.signUpWithFirebaseFetching());\n    try {\n      const response: any = await Firebase.app.auth().createUserWithEmailAndPassword(params.email.trim(), params.password.trim())\n      return dispatch(ACTIONS.signUpWithFirebaseFulfilled(response));\n    }\n    catch (error) {\n      return dispatch(ACTIONS.signUpWithFirebaseRejected(error));\n    }\n  };","// extracted by mini-css-extract-plugin\nmodule.exports = {\"button\":\"button_button__3p82B\",\"darkTheme\":\"button_darkTheme__1dekQ\",\"whiteTheme\":\"button_whiteTheme__3-rSP\"};","import React from 'react'\nimport Modal from '@material-ui/core/Modal';\nimport Button from 'components/shared/button'\nimport styles from './modal.module.css'\n\ninterface Props {\n  open: boolean;\n  title: string;\n  detail: string;\n  submitting?: boolean;\n  close: () => void;\n  callback: (params: any) => void;\n  children?: React.ReactElement;\n  okButton?: {\n    title: string;\n    onClick: () => void;\n    onlyButton?: boolean\n  }\n}\n\nconst ModalComponent = (props: Props) => {\n\n  const {\n    open,\n    title,\n    detail,\n    close,\n    callback,\n    submitting,\n    children,\n    okButton,\n  } = props\n\n  return (\n    <Modal\n    className={styles.modalContainer}\n    open={open}\n  >\n    {children || (\n        <div className={styles.modal}>\n          <div className={styles.body}>\n            <div className={styles.title}>\n              {title}\n            </div>\n            <div className={styles.line} />\n            <div className={styles.detail}>\n              {detail}\n            </div>\n            <div className={styles.buttons}>\n              <Button\n                submitting={submitting}\n                onClick={callback}\n                className={styles.button}\n              >\n                {okButton ? okButton.title : 'Yes'}\n              </Button>\n              {okButton?.onlyButton ? null : (\n                <Button\n                  disabled={submitting}\n                  onClick={close}\n                  className={styles.button}\n                  >\n                  Cancel\n                </Button>\n              )}\n            </div>\n          </div>\n        </div>\n      )}\n  </Modal>\n  )\n}\n\nexport default ModalComponent","import React, { useState } from 'react';\nimport { FieldRenderProps } from 'react-final-form';\nimport styles from './text-input.module.css';\n\ninterface Props extends FieldRenderProps<string, any> {\n  label?: string;\n  placeholder?: string;\n}\n\nexport const TextInput = (props: Props) => {\n\n  const { meta, input, label, placeholder } = props\n  const [ isShowingPassword, setShowPassword ] = useState(false)\n\n  return (\n    <div className={styles.container}>\n      <label className={styles.label}>\n        {label && (\n          <span className={styles.labelText}>\n            {label}\n          </span>\n        )}\n        <input\n          className={styles.input}\n          placeholder={placeholder}\n          {...input}\n          type={isShowingPassword ? 'text' : input.type}\n        />\n        {input.type === 'password' && (\n          <button\n            onClick={() => setShowPassword(!isShowingPassword)}\n            className={styles.showButton}\n          >\n            <i className=\"material-icons\">{isShowingPassword ? 'visibility' : 'visibility_off'}</i>\n          </button>\n        )}\n      </label>\n      <div className={styles.error}>\n        {meta.error && meta.touched && (\n          <span className={styles.errorText}>\n            {meta.error}\n          </span>\n        )}\n      </div>\n    </div>\n  );\n}\n\nexport default TextInput;\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"text-input_container__-16Gn\",\"label\":\"text-input_label__1DFnE\",\"labelText\":\"text-input_labelText__3rZnL\",\"input\":\"text-input_input__iYmA8\",\"error\":\"text-input_error__1GFd1\",\"errorText\":\"text-input_errorText__1J0Vw\",\"showButton\":\"text-input_showButton___yPK8\"};","import React from 'react'\nimport Particles from \"react-tsparticles\";\nimport styles from './animation.module.css'\n\nconst Animation = () => {\n  return (\n    <div className={styles.container}>\n      <Particles\n        id=\"tsparticles\"\n        options={{\n          background: {\n            color: {\n              value: \"#282c34\",\n            },\n          },\n          fpsLimit: 60,\n          interactivity: {\n            detectsOn: \"canvas\",\n            events: {\n              onClick: {\n                enable: false,\n                mode: \"push\",\n              },\n              onHover: {\n                enable: false,\n                mode: \"repulse\",\n              },\n              resize: true,\n            },\n            modes: {\n              bubble: {\n                distance: 600,\n                duration: 4,\n                opacity: 0.8,\n                size: 30,\n              },\n              push: {\n                quantity: 4,\n              },\n              repulse: {\n                distance: 500,\n                duration: 3,\n              },\n            },\n          },\n          particles: {\n            color: {\n              value: \"#ffffff\",\n            },\n            links: {\n              color: \"#ffffff\",\n              distance: 150,\n              enable: true,\n              opacity: 0.4,\n              width: 1,\n            },\n            collisions: {\n              enable: true,\n            },\n            move: {\n              direction: \"none\",\n              enable: true,\n              outMode: \"bounce\",\n              random: false,\n              speed: 3,\n              straight: false,\n            },\n            number: {\n              density: {\n                enable: true,\n                value_area: 1000,\n              },\n              value: 80,\n            },\n            opacity: {\n              value: 0.5,\n            },\n            shape: {\n              type: \"circle\",\n            },\n            size: {\n              random: true,\n              value: 4,\n            },\n          },\n          detectRetina: true,\n        }}\n      />\n    </div>\n  )\n}\n\nexport default Animation","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"animation_container__21GfY\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"modalContainer\":\"modal_modalContainer__1B0MT\",\"modal\":\"modal_modal__1jijj\",\"body\":\"modal_body__2LAWM\",\"title\":\"modal_title__1AK_W\",\"line\":\"modal_line__1QbKw\",\"detail\":\"modal_detail__1dAuZ\",\"buttons\":\"modal_buttons__1Nv22\",\"button\":\"modal_button__V_ZdM\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"page\":\"sign-up_page__3rBEp\",\"container\":\"sign-up_container__29EkW\",\"logoContainer\":\"sign-up_logoContainer__2V9GG\",\"logoTitle\":\"sign-up_logoTitle__3Y58h\",\"logoSubtitle\":\"sign-up_logoSubtitle__12aIW\",\"form\":\"sign-up_form__Vahsl\",\"button\":\"sign-up_button__KFdrX\",\"error\":\"sign-up_error__1sUmg\",\"message\":\"sign-up_message__1rIu7\"};","import React, { useState } from 'react'\nimport { Form, Field } from 'react-final-form'\nimport TextInput from 'components/shared/text-input'\nimport Button from 'components/shared/button'\nimport { FORM_ERROR } from 'final-form';\nimport { useHistory } from \"react-router-dom\";\nimport Modal from 'components/shared/modal'\nimport Animation from 'components/shared/animation'\nimport { ReduxProps } from '.';\nimport styles from './sign-up.module.css'\n\nexport const Login = (props: ReduxProps) => {\n  const { isFetching } = props\n  const [ created, setCreated ] = useState(false)\n  const history = useHistory();\n\n  const onSubmit = async (values: any) => {\n    const { password, email } = values;\n    let error\n    try {\n      const response: any = await props.signUpWithFirebase({ email, password })\n      switch (response.payload.code) {\n        case 'auth/email-already-in-use':\n          error = 'Email already in use'\n          break\n        case 'auth/invalid-email':\n          error = 'Email not valid'\n          break\n        case 'auth/network-request-failed':\n          error = 'Error de conexión'\n          break\n        case 'auth/too-many-requests':\n          error = 'Muchos intentos fallidos. Intente en unos minutos.'\n          break\n      }\n      if(error) {\n        return { [FORM_ERROR]: error };\n      }\n      setCreated(true)\n    }\n    catch (error) {\n      return { [FORM_ERROR]: error };\n    }\n  }\n\n  return (\n    <div className={styles.page}>\n      <div className={styles.container}>\n        <Modal\n          open={created}\n          close={() => console.log('a')}\n          callback={() => history.replace('/login')}\n          title=\"Created\"\n          detail=\"Your account was created successfully\"\n          okButton={{\n            title: 'Go to Login',\n            onClick: () => history.replace('/login'),\n            onlyButton: true\n          }}\n        />\n        <div className={styles.logoContainer}>\n          <h2 className={styles.logoTitle}>\n            MyPassword\n          </h2>\n          <h6 className={styles.logoSubtitle}>\n          Sign Up\n          </h6>\n        </div>\n        <Form\n          onSubmit={onSubmit}\n          render={({ handleSubmit, submitError, values }) => (\n            <form onSubmit={handleSubmit} className={styles.form}>\n              {console.log(submitError)}\n              <Field\n                name=\"email\"\n                placeholder=\"Insert your email\"\n                type=\"text\"\n                label=\"email\"\n                component={TextInput}\n              />\n              <Field\n                name=\"password\"\n                placeholder=\"Insert your password\"\n                type=\"password\"\n                label=\"password\"\n                component={TextInput}\n              />\n              <div className={styles.button}>\n                <Button\n                  type=\"submit\"\n                  disabled={isFetching || !values.email || !values.password}\n                  submitting={isFetching}\n                  >\n                  Create Account\n                </Button>\n              </div>\n              <div className={styles.error}>\n                {submitError}\n              </div>\n            </form>\n          )}\n        />\n        <div className={styles.message}>\n          Your password is used to encrypt the other passwords stored in the database.\n          <br/>\n          If you forget this password, you will not be able to recover the other passwords.\n        </div>\n      </div>\n      <Animation />\n    </div>\n  )\n}\n\nexport default Login","import { connect } from 'react-redux';\nimport { bindActionCreators, Dispatch } from 'redux';\nimport { DVPState, RootAction } from 'redux/modules';\nimport { signUpWithFirebase } from 'redux/modules/auth/thunks';\nimport Component from './sign-up'\n\ninterface StateProps {\n  readonly isFetching: DVPState['auth']['isFetching'];\n}\n\nconst mapStateToProps = (state: DVPState) => ({\n  isFetching: state.auth.isFetching,\n});\n\ninterface DispatchProps {\n  handleSubmit: () => void;\n  signUpWithFirebase: typeof signUpWithFirebase;\n}\n\nconst mapDispatchToProps = (dispatch: Dispatch<RootAction>) =>\n  bindActionCreators({\n    signUpWithFirebase,\n  }, dispatch);\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Component)\nexport type ReduxProps = StateProps & DispatchProps\n","import * as TYPES from './types';\nimport { action } from 'typesafe-actions';\n\nexport const loginWithFirebaseFetching = () => action(\n  TYPES.AuthActionConst.LOGIN_FIREBASE_FETCHING,\n);\n\nexport const loginWithFirebaseFulfilled = (data: any, password:string) => action(\n  TYPES.AuthActionConst.LOGIN_FIREBASE_FULFILLED,\n  data,\n  password,\n);\n\nexport const loginWithFirebaseRejected = (error: TYPES.FirebaseError) => action(\n  TYPES.AuthActionConst.LOGIN_FIREBASE_REJECTED,\n  error,\n);\n\nexport const logoutFetching = () => action(\n  TYPES.AuthActionConst.LOGOUT_FETCHING,\n);\n\nexport const logoutFulfilled = () => action(\n  TYPES.AuthActionConst.LOGOUT_FULFILLED,\n);\n\nexport const logoutRejected = (error: TYPES.Error) => action(\n  TYPES.AuthActionConst.LOGOUT_REJECTED,\n  error\n);\n\nexport const setFingerPrint = (value: boolean) => action(\n  TYPES.AuthActionConst.SET_FINGER_PRINT,\n  value\n);\n\nexport const signUpWithFirebaseFetching = () => action(\n  TYPES.AuthActionConst.SIGN_UP_FIREBASE_FETCHING,\n);\n\nexport const signUpWithFirebaseFulfilled = (data: any) => action(\n  TYPES.AuthActionConst.SIGN_UP_FIREBASE_FULFILLED,\n  data,\n);\n\nexport const signUpWithFirebaseRejected = (error: TYPES.FirebaseError) => action(\n  TYPES.AuthActionConst.SIGN_UP_FIREBASE_REJECTED,\n  error,\n);","import React from 'react';\nimport BarLoader from 'react-spinners/BarLoader'\nimport cx from 'classnames';\nimport styles from './button.module.css';\n\ninterface Props {\n  children: React.ReactNode;\n  type?: \"button\" | \"submit\" | \"reset\" | undefined;\n  submitting?: boolean;\n  disabled?: boolean;\n  onClick?: (params?: any) => void;\n  className?: string;\n  theme?: \"white\" | \"dark\";\n}\n\nexport const Button = (props: Props) => {\n\n  const {\n    type = 'button',\n    children,\n    disabled,\n    submitting,\n    onClick,\n    className,\n    theme = 'white',\n  } = props\n\n  return (\n    <button\n      type={type}\n      disabled={disabled || submitting}\n      className={cx(styles.button, {\n        [styles.whiteTheme]: theme === 'white',\n        [styles.darkTheme]: theme === 'dark',\n      }, className)}\n      onClick={onClick}\n    >\n      {submitting\n        ? (<BarLoader\n            height={2}\n            width={'70%'}\n            color={theme === 'white' ? '#fafafa' : '#000' }\n            loading={true}\n          />)\n        : children\n      }\n    </button>\n  );\n}\n\nexport default Button;\n"],"sourceRoot":""}