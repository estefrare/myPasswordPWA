{"version":3,"sources":["components/shared/text-input/index.tsx","components/shared/text-input/text-input.module.css","components/login/login.module.css","components/login/login.tsx","components/login/index.ts","redux/modules/auth/actions.ts","components/shared/button/index.tsx","redux/modules/auth/thunks.ts","components/shared/button/button.module.css"],"names":["TextInput","props","meta","input","label","placeholder","className","styles","container","labelText","type","error","touched","errorText","module","exports","Login","isFetching","history","useHistory","onSubmit","values","a","password","email","loginWithFirebase","response","payload","code","FORM_ERROR","logoContainer","logoTitle","logoSubtitle","render","handleSubmit","submitError","form","name","component","button","disabled","submitting","signUButton","onClick","push","message","connect","state","auth","dispatch","bindActionCreators","Component","loginWithFirebaseFetching","action","TYPES","LOGIN_FIREBASE_FETCHING","loginWithFirebaseFulfilled","data","LOGIN_FIREBASE_FULFILLED","loginWithFirebaseRejected","LOGIN_FIREBASE_REJECTED","logoutFetching","LOGOUT_FETCHING","logoutFulfilled","LOGOUT_FULFILLED","logoutRejected","LOGOUT_REJECTED","setFingerPrint","value","SET_FINGER_PRINT","signUpWithFirebaseFetching","SIGN_UP_FIREBASE_FETCHING","signUpWithFirebaseFulfilled","SIGN_UP_FIREBASE_FULFILLED","signUpWithFirebaseRejected","SIGN_UP_FIREBASE_REJECTED","Button","children","size","color","loading","params","ACTIONS","Firebase","app","signInWithEmailAndPassword","trim","logout","localStorage","removeItem","signOut","signUpWithFirebase","createUserWithEmailAndPassword"],"mappings":"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","file":"static/js/9.68bf6063.chunk.js","sourcesContent":["import React from 'react';\nimport { FieldRenderProps } from 'react-final-form';\nimport styles from './text-input.module.css';\n\ninterface Props extends FieldRenderProps<string, any> {\n  label?: string;\n  placeholder?: string;\n}\n\nexport const TextInput = (props: Props) => {\n\n  const { meta, input, label, placeholder } = props\n\n  return (\n    <div className={styles.container}>\n      <label className={styles.label}>\n        {label && (\n          <span className={styles.labelText}>\n            {label}\n          </span>\n        )}\n        <input \n          className={styles.input} \n          type=\"text\"\n          placeholder={placeholder}\n          {...input} \n        />\n      </label>\n      <div className={styles.error}>\n        {meta.error && meta.touched && (\n          <span className={styles.errorText}>\n            {meta.error}\n          </span>\n        )}\n      </div>\n    </div>\n  );\n}\n\nexport default TextInput;\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"text-input_container__-16Gn\",\"label\":\"text-input_label__1DFnE\",\"labelText\":\"text-input_labelText__3rZnL\",\"input\":\"text-input_input__iYmA8\",\"error\":\"text-input_error__1GFd1\",\"errorText\":\"text-input_errorText__1J0Vw\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"login_container__2teO8\",\"logoContainer\":\"login_logoContainer__tV7f5\",\"logoTitle\":\"login_logoTitle__3xBQ2\",\"logoSubtitle\":\"login_logoSubtitle__3MGg7\",\"form\":\"login_form__11Qp4\",\"button\":\"login_button__Fi6x4\",\"error\":\"login_error__1PEfx\",\"message\":\"login_message__4VSX3\",\"signUButton\":\"login_signUButton__3R02m\"};","import React from 'react'\nimport { Form, Field } from 'react-final-form'\nimport TextInput from 'components/shared/text-input'\nimport Button from 'components/shared/button'\nimport { FORM_ERROR } from 'final-form';\nimport { useHistory } from \"react-router-dom\";\nimport { ReduxProps } from '.';\nimport styles from './login.module.css'\n\nexport const Login = (props: ReduxProps) => { \n  const { isFetching } = props\n  const history = useHistory();\n\n  const onSubmit = async (values: any) => {\n    const { password, email } = values;\n    let error\n    try {\n      const response: any = await props.loginWithFirebase({ email, password })\n      switch (response.payload.code) {\n        case 'auth/user-not-found':\n          error = 'Usuario o contraseña incorrecta'\n          break\n        case 'auth/network-request-failed':\n          error = 'Error de conexión'\n          break\n        case 'auth/wrong-password':\n          error = 'Usuario o contraseña incorrecta'\n          break\n        case 'auth/argument-error':\n          error = 'Usuario o contraseña incorrecta'\n          break\n        case 'auth/too-many-requests':\n          error = 'Muchos intentos fallidos. Intente en unos minutos.'\n          break\n      }\n      if(error) {\n        return { [FORM_ERROR]: error };\n      }\n    }\n    catch (error) {\n      return { [FORM_ERROR]: error };\n    }\n  }\n\n  return (\n    <div className={styles.container}>\n      <div className={styles.logoContainer}>\n        <div className={styles.logoTitle}>\n          MyPassword\n        </div>\n        <div className={styles.logoSubtitle}>\n          Keep all your passwords in one place\n        </div>\n      </div>\n      <Form\n        onSubmit={onSubmit}\n        render={({ handleSubmit, submitError, values }) => (\n          <form onSubmit={handleSubmit} className={styles.form}>\n            <Field \n              name=\"email\"\n              placeholder=\"Email\"\n              type=\"text\"\n              component={TextInput}\n            />\n            <Field \n              name=\"password\"\n              placeholder=\"Password\"\n              type=\"password\"\n              component={TextInput} \n            />\n            <div className={styles.button}>\n              <Button \n                type=\"submit\"\n                disabled={isFetching || !values.email || !values.password}\n                submitting={isFetching}\n                >\n                Login\n              </Button>\n            </div>\n            <div className={styles.button}>\n              <Button \n                className={styles.signUButton}\n                onClick={() => history.push('sign-up')}\n              >\n                Sign Up\n              </Button>\n            </div>\n            <div className={styles.error}>\n              {submitError}\n            </div>\n          </form>\n        )}\n      />\n\n      <div className={styles.message}>\n        Your password is used to encrypt the other passwords stored in the database.\n        <br/>\n        If you forget this password, you will not be able to recover the other passwords.\n      </div>\n    </div>\n  )\n}\n\nexport default Login","import { connect } from 'react-redux';\nimport { bindActionCreators, Dispatch } from 'redux';\nimport { DVPState, RootAction } from 'redux/modules';\nimport { loginWithFirebase } from 'redux/modules/auth/thunks';\nimport Component from './login'\n\ninterface StateProps {\n  readonly isFetching: DVPState['auth']['isFetching'];\n}\n\nconst mapStateToProps = (state: DVPState) => ({\n  isFetching: state.auth.isFetching,\n});\n\ninterface DispatchProps {\n  handleSubmit: () => void;\n  loginWithFirebase: typeof loginWithFirebase;\n}\n\nconst mapDispatchToProps = (dispatch: Dispatch<RootAction>) =>\n  bindActionCreators({\n    loginWithFirebase,\n  }, dispatch);\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Component)\nexport type ReduxProps = StateProps & DispatchProps\n","import * as TYPES from './types';\nimport { action } from 'typesafe-actions';\n\nexport const loginWithFirebaseFetching = () => action(\n  TYPES.AuthActionConst.LOGIN_FIREBASE_FETCHING,\n);\n\nexport const loginWithFirebaseFulfilled = (data: any, password:string) => action(\n  TYPES.AuthActionConst.LOGIN_FIREBASE_FULFILLED,\n  data,\n  password,\n);\n\nexport const loginWithFirebaseRejected = (error: TYPES.FirebaseError) => action(\n  TYPES.AuthActionConst.LOGIN_FIREBASE_REJECTED,\n  error,\n);\n\nexport const logoutFetching = () => action(\n  TYPES.AuthActionConst.LOGOUT_FETCHING,\n);\n\nexport const logoutFulfilled = () => action(\n  TYPES.AuthActionConst.LOGOUT_FULFILLED,\n);\n\nexport const logoutRejected = (error: TYPES.Error) => action(\n  TYPES.AuthActionConst.LOGOUT_REJECTED,\n  error\n);\n\nexport const setFingerPrint = (value: boolean) => action(\n  TYPES.AuthActionConst.SET_FINGER_PRINT,\n  value\n);\n\nexport const signUpWithFirebaseFetching = () => action(\n  TYPES.AuthActionConst.SIGN_UP_FIREBASE_FETCHING,\n);\n\nexport const signUpWithFirebaseFulfilled = (data: any) => action(\n  TYPES.AuthActionConst.SIGN_UP_FIREBASE_FULFILLED,\n  data,\n);\n\nexport const signUpWithFirebaseRejected = (error: TYPES.FirebaseError) => action(\n  TYPES.AuthActionConst.SIGN_UP_FIREBASE_REJECTED,\n  error,\n);","import React from 'react';\nimport PulseLoader from 'react-spinners/PulseLoader'\nimport styles from './button.module.css';\n\ninterface Props {\n  children: React.ReactNode;\n  type?: \"button\" | \"submit\" | \"reset\" | undefined;\n  submitting?: boolean;\n  disabled?: boolean;\n  onClick?: (params?: any) => void;\n  className?: string;\n}\n\nexport const Button = (props: Props) => {\n\n  const { \n    type = 'button',\n    children,\n    disabled,\n    submitting,\n    onClick,\n    className\n  } = props\n\n  return (\n    <button \n      type={type}\n      disabled={disabled || submitting}\n      className={`${styles.button} ${className}`}\n      onClick={onClick}\n    >\n      {submitting \n        ? (<PulseLoader\n            size={5}\n            color={'#292724'}\n            loading={true}\n          />) \n        : children\n      }\n    </button>\n  );\n}\n\nexport default Button;\n","import * as TYPES from './types';\nimport * as ACTIONS from './actions';\nimport { ThunkDispatch } from 'redux-thunk';\nimport { DVPState } from 'redux/modules/index';\nimport { AnyAction } from 'redux';\nimport Firebase from 'helpers/firebase';\n\nexport const loginWithFirebase = (params: TYPES.LoginParams) =>\n  async (dispatch: ThunkDispatch<DVPState, {}, AnyAction>) => {\n    dispatch(ACTIONS.loginWithFirebaseFetching());\n    try {\n      const response: any = await Firebase.app.auth().signInWithEmailAndPassword(params.email.trim(), params.password.trim());\n      return dispatch(ACTIONS.loginWithFirebaseFulfilled(response, params.password.trim()));\n    }\n    catch (error) {\n      return dispatch(ACTIONS.loginWithFirebaseRejected(error));\n    }\n  };\n\nexport const logout: any = () => async (dispatch: ThunkDispatch<DVPState, {}, AnyAction>) => {\n  dispatch(ACTIONS.logoutFetching());\n  try {\n    await localStorage.removeItem('users');\n    await Firebase.app.auth().signOut();\n    return dispatch(ACTIONS.logoutFulfilled());\n  }\n  catch (error) {\n    return dispatch(ACTIONS.logoutRejected(error));\n  }\n};\n\nexport const signUpWithFirebase = (params: TYPES.LoginParams) =>\n  async (dispatch: ThunkDispatch<DVPState, {}, AnyAction>) => {\n    dispatch(ACTIONS.signUpWithFirebaseFetching());\n    try {\n      const response: any = await Firebase.app.auth().createUserWithEmailAndPassword(params.email.trim(), params.password.trim())\n      return dispatch(ACTIONS.signUpWithFirebaseFulfilled(response));\n    }\n    catch (error) {\n      return dispatch(ACTIONS.signUpWithFirebaseRejected(error));\n    }\n  };","// extracted by mini-css-extract-plugin\nmodule.exports = {\"button\":\"button_button__3p82B\"};"],"sourceRoot":""}