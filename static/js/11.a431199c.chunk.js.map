{"version":3,"sources":["redux/modules/auth/thunks.ts","helpers/webauth/index.ts","helpers/webauth/cbor.js","components/auth/auth.module.css","components/auth/auth.tsx","components/auth/index.ts","redux/modules/auth/actions.ts"],"names":["loginWithFirebase","params","dispatch","a","ACTIONS","Firebase","app","auth","signInWithEmailAndPassword","email","trim","password","response","logout","localStorage","removeItem","signOut","signUpWithFirebase","createUserWithEmailAndPassword","webAuthnSignup","publicKeyCredentialCreationOptions","challenge","Uint8Array","from","c","charCodeAt","rp","name","user","id","displayName","pubKeyCredParams","alg","type","authenticatorSelection","authenticatorAttachment","timeout","attestation","navigator","credentials","create","publicKey","key","registerCredential","webAuthnSignin","usersString","getItem","allowCredentials","JSON","parse","map","Object","values","credentialId","credentialRequestOptions","get","credential","authData","extractAuthData","credentialIdLength","getCredentialIdLength","slice","publicKeyBytes","push","Math","floor","random","setItem","stringify","dataView","DataView","ArrayBuffer","forEach","value","index","setUint8","getUint16","CBOR","attestationObject","global","undefined","obj","encode","lastLength","data","offset","prepareWrite","length","newByteLength","byteLength","requiredLength","oldDataView","uint32count","i","setUint32","getUint32","commitWrite","writeUint8","writeUint8Array","writeTypeAndLength","setUint16","writeUint16","writeUint32","low","high","writeUint64","encodeItem","setFloat64","writeFloat64","utf8data","charCode","Array","isArray","keys","ret","retView","getUint8","decode","tagger","simpleValue","commitRead","readArrayBuffer","readUint8","readUint16","readUint32","readBreak","readLength","additionalInformation","readIndefiniteStringLength","majorType","initialByte","appendUtf16Data","utf16data","decodeItem","tempArrayBuffer","tempDataView","sign","exponent","fraction","getFloat32","readFloat16","getFloat64","elements","fullArrayLength","fullArray","fullArrayOffset","set","String","fromCharCode","apply","retArray","retObject","module","exports","this","copyToClipboard","text","clipboard","writeText","Auth","props","authenticated","useFingerPrint","history","useHistory","useEffect","then","console","log","replace","catch","error","className","styles","container","connect","state","bindActionCreators","Component","loginWithFirebaseFetching","action","TYPES","LOGIN_FIREBASE_FETCHING","loginWithFirebaseFulfilled","LOGIN_FIREBASE_FULFILLED","loginWithFirebaseRejected","LOGIN_FIREBASE_REJECTED","logoutFetching","LOGOUT_FETCHING","logoutFulfilled","LOGOUT_FULFILLED","logoutRejected","LOGOUT_REJECTED","setFingerPrint","SET_FINGER_PRINT","signUpWithFirebaseFetching","SIGN_UP_FIREBASE_FETCHING","signUpWithFirebaseFulfilled","SIGN_UP_FIREBASE_FULFILLED","signUpWithFirebaseRejected","SIGN_UP_FIREBASE_REJECTED"],"mappings":"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","file":"static/js/11.a431199c.chunk.js","sourcesContent":["import * as TYPES from './types';\nimport * as ACTIONS from './actions';\nimport { ThunkDispatch } from 'redux-thunk';\nimport { DVPState } from 'redux/modules/index';\nimport { AnyAction } from 'redux';\nimport Firebase from 'helpers/firebase';\n\nexport const loginWithFirebase = (params: TYPES.LoginParams) =>\n  async (dispatch: ThunkDispatch<DVPState, {}, AnyAction>) => {\n    dispatch(ACTIONS.loginWithFirebaseFetching());\n    try {\n      const response: any = await Firebase.app.auth().signInWithEmailAndPassword(params.email.trim(), params.password.trim());\n      return dispatch(ACTIONS.loginWithFirebaseFulfilled(response, params.password.trim()));\n    }\n    catch (error) {\n      return dispatch(ACTIONS.loginWithFirebaseRejected(error));\n    }\n  };\n\nexport const logout: any = () => async (dispatch: ThunkDispatch<DVPState, {}, AnyAction>) => {\n  dispatch(ACTIONS.logoutFetching());\n  try {\n    await localStorage.removeItem('users');\n    await Firebase.app.auth().signOut();\n    return dispatch(ACTIONS.logoutFulfilled());\n  }\n  catch (error) {\n    return dispatch(ACTIONS.logoutRejected(error));\n  }\n};\n\nexport const signUpWithFirebase = (params: TYPES.LoginParams) =>\n  async (dispatch: ThunkDispatch<DVPState, {}, AnyAction>) => {\n    dispatch(ACTIONS.signUpWithFirebaseFetching());\n    try {\n      const response: any = await Firebase.app.auth().createUserWithEmailAndPassword(params.email.trim(), params.password.trim())\n      return dispatch(ACTIONS.signUpWithFirebaseFulfilled(response));\n    }\n    catch (error) {\n      return dispatch(ACTIONS.signUpWithFirebaseRejected(error));\n    }\n  };","import * as CBOR from './cbor';\n\nexport const webAuthnSignup = async (email: string) => {\n  const publicKeyCredentialCreationOptions: PublicKeyCredentialCreationOptions = {\n    // Challenge shoulda come from the server\n    challenge: Uint8Array.from('someChallengeIsHereComOn', c => c.charCodeAt(0)),\n    rp: {\n      name: 'WebAuthn Test',\n      // id: 'localhost:4200',\n    },\n    user: {\n      // Some user id coming from the server\n      id: Uint8Array.from(email, (c: any) => c.charCodeAt(0)),\n      name: email,\n      displayName: email,\n    },\n    pubKeyCredParams: [{ alg: -7, type: 'public-key' }],\n    authenticatorSelection: {\n      authenticatorAttachment: 'platform',\n      // requireResidentKey: true,\n    },\n    timeout: 60000,\n    attestation: 'direct'\n  };\n\n  const key: any= await navigator.credentials.create({\n    publicKey: publicKeyCredentialCreationOptions,\n  });\n  registerCredential(key)\n}\n\nexport const webAuthnSignin = () => {\n  const usersString  = localStorage.getItem('users');\n  const user = usersString ? JSON.parse(usersString) : [];\n  const allowCredentials: PublicKeyCredentialDescriptor[] = user.credentials.map((c: any) => {\n    return { type: 'public-key', id: Uint8Array.from(Object.values(c.credentialId)) };\n  });\n  \n  const credentialRequestOptions: PublicKeyCredentialRequestOptions = {\n    challenge: Uint8Array.from('someChallengeIsHereComOn', c => c.charCodeAt(0)),\n    allowCredentials,\n  };\n\n  return navigator.credentials.get({\n    publicKey: credentialRequestOptions,\n  });\n}\n\nconst registerCredential = (credential: PublicKeyCredential) => {\n  const user: any = { credentials: []}\n  const authData = extractAuthData(credential);\n  const credentialIdLength = getCredentialIdLength(authData);\n  const credentialId: Uint8Array = authData.slice(55, 55 + credentialIdLength);\n  const publicKeyBytes: Uint8Array = authData.slice(55 + credentialIdLength);\n  const valid = true;\n\n  if (valid) {\n    user.credentials.push( { credentialId, publicKey: publicKeyBytes } );\n    user.id = '' + Math.floor(Math.random() * 10000000);\n    localStorage.setItem('users', JSON.stringify(user));\n  }\n  return valid;\n}\n\nconst getCredentialIdLength = (authData: Uint8Array) => {\n  const dataView = new DataView(new ArrayBuffer(2));\n  const idLenBytes = authData.slice(53, 55);\n  idLenBytes.forEach((value, index) => dataView.setUint8(index, value));\n  return dataView.getUint16(0);\n}\n\nconst extractAuthData = (credential: PublicKeyCredential) => {\n  const decodedAttestationObj: any = CBOR.decode((credential.response as any).attestationObject);\n  const { authData } = decodedAttestationObj;\n  return authData;\n}","/* eslint-disable strict */\n/* eslint-disable no-shadow-restricted-names */\n/* eslint-disable no-mixed-operators */\n/* eslint-disable no-throw-literal */\n/* eslint-disable default-case */\n/*\n * The MIT License (MIT)\n *\n * Copyright (c) 2014-2016 Patrick Gansterer <paroga@paroga.com>\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in all\n * copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n * SOFTWARE.\n */\n\n(function(global, undefined) { \"use strict\";\nvar POW_2_24 = 5.960464477539063e-8,\n    POW_2_32 = 4294967296,\n    POW_2_53 = 9007199254740992;\n\nfunction encode(value) {\n  var data = new ArrayBuffer(256);\n  var dataView = new DataView(data);\n  var lastLength;\n  var offset = 0;\n\n  function prepareWrite(length) {\n    var newByteLength = data.byteLength;\n    var requiredLength = offset + length;\n    while (newByteLength < requiredLength)\n      newByteLength <<= 1;\n    if (newByteLength !== data.byteLength) {\n      var oldDataView = dataView;\n      data = new ArrayBuffer(newByteLength);\n      dataView = new DataView(data);\n      var uint32count = (offset + 3) >> 2;\n      for (var i = 0; i < uint32count; ++i)\n        dataView.setUint32(i << 2, oldDataView.getUint32(i << 2));\n    }\n\n    lastLength = length;\n    return dataView;\n  }\n  function commitWrite() {\n    offset += lastLength;\n  }\n  function writeFloat64(value) {\n    commitWrite(prepareWrite(8).setFloat64(offset, value));\n  }\n  function writeUint8(value) {\n    commitWrite(prepareWrite(1).setUint8(offset, value));\n  }\n  function writeUint8Array(value) {\n    var dataView = prepareWrite(value.length);\n    for (var i = 0; i < value.length; ++i)\n      dataView.setUint8(offset + i, value[i]);\n    commitWrite();\n  }\n  function writeUint16(value) {\n    commitWrite(prepareWrite(2).setUint16(offset, value));\n  }\n  function writeUint32(value) {\n    commitWrite(prepareWrite(4).setUint32(offset, value));\n  }\n  function writeUint64(value) {\n    var low = value % POW_2_32;\n    var high = (value - low) / POW_2_32;\n    var dataView = prepareWrite(8);\n    dataView.setUint32(offset, high);\n    dataView.setUint32(offset + 4, low);\n    commitWrite();\n  }\n  function writeTypeAndLength(type, length) {\n    if (length < 24) {\n      writeUint8(type << 5 | length);\n    } else if (length < 0x100) {\n      writeUint8(type << 5 | 24);\n      writeUint8(length);\n    } else if (length < 0x10000) {\n      writeUint8(type << 5 | 25);\n      writeUint16(length);\n    } else if (length < 0x100000000) {\n      writeUint8(type << 5 | 26);\n      writeUint32(length);\n    } else {\n      writeUint8(type << 5 | 27);\n      writeUint64(length);\n    }\n  }\n\n  function encodeItem(value) {\n    var i;\n\n    if (value === false)\n      return writeUint8(0xf4);\n    if (value === true)\n      return writeUint8(0xf5);\n    if (value === null)\n      return writeUint8(0xf6);\n    if (value === undefined)\n      return writeUint8(0xf7);\n\n    switch (typeof value) {\n      case \"number\":\n        if (Math.floor(value) === value) {\n          if (0 <= value && value <= POW_2_53)\n            return writeTypeAndLength(0, value);\n          if (-POW_2_53 <= value && value < 0)\n            return writeTypeAndLength(1, -(value + 1));\n        }\n        writeUint8(0xfb);\n        return writeFloat64(value);\n\n      case \"string\":\n        var utf8data = [];\n        for (i = 0; i < value.length; ++i) {\n          var charCode = value.charCodeAt(i);\n          if (charCode < 0x80) {\n            utf8data.push(charCode);\n          } else if (charCode < 0x800) {\n            utf8data.push(0xc0 | charCode >> 6);\n            utf8data.push(0x80 | charCode & 0x3f);\n          } else if (charCode < 0xd800) {\n            utf8data.push(0xe0 | charCode >> 12);\n            utf8data.push(0x80 | (charCode >> 6)  & 0x3f);\n            utf8data.push(0x80 | charCode & 0x3f);\n          } else {\n            charCode = (charCode & 0x3ff) << 10;\n            charCode |= value.charCodeAt(++i) & 0x3ff;\n            charCode += 0x10000;\n\n            utf8data.push(0xf0 | charCode >> 18);\n            utf8data.push(0x80 | (charCode >> 12)  & 0x3f);\n            utf8data.push(0x80 | (charCode >> 6)  & 0x3f);\n            utf8data.push(0x80 | charCode & 0x3f);\n          }\n        }\n\n        writeTypeAndLength(3, utf8data.length);\n        return writeUint8Array(utf8data);\n\n      default:\n        var length;\n        if (Array.isArray(value)) {\n          length = value.length;\n          writeTypeAndLength(4, length);\n          for (i = 0; i < length; ++i)\n            encodeItem(value[i]);\n        } else if (value instanceof Uint8Array) {\n          writeTypeAndLength(2, value.length);\n          writeUint8Array(value);\n        } else {\n          var keys = Object.keys(value);\n          length = keys.length;\n          writeTypeAndLength(5, length);\n          for (i = 0; i < length; ++i) {\n            var key = keys[i];\n            encodeItem(key);\n            encodeItem(value[key]);\n          }\n        }\n    }\n  }\n\n  encodeItem(value);\n\n  if (\"slice\" in data)\n    return data.slice(0, offset);\n\n  var ret = new ArrayBuffer(offset);\n  var retView = new DataView(ret);\n  for (var i = 0; i < offset; ++i)\n    retView.setUint8(i, dataView.getUint8(i));\n  return ret;\n}\n\nfunction decode(data, tagger, simpleValue) {\n  var dataView = new DataView(data);\n  var offset = 0;\n\n  if (typeof tagger !== \"function\")\n    tagger = function(value) { return value; };\n  if (typeof simpleValue !== \"function\")\n    simpleValue = function() { return undefined; };\n\n  function commitRead(length, value) {\n    offset += length;\n    return value;\n  }\n  function readArrayBuffer(length) {\n    return commitRead(length, new Uint8Array(data, offset, length));\n  }\n  function readFloat16() {\n    var tempArrayBuffer = new ArrayBuffer(4);\n    var tempDataView = new DataView(tempArrayBuffer);\n    var value = readUint16();\n\n    var sign = value & 0x8000;\n    var exponent = value & 0x7c00;\n    var fraction = value & 0x03ff;\n\n    if (exponent === 0x7c00)\n      exponent = 0xff << 10;\n    else if (exponent !== 0)\n      exponent += (127 - 15) << 10;\n    else if (fraction !== 0)\n      return (sign ? -1 : 1) * fraction * POW_2_24;\n\n    tempDataView.setUint32(0, sign << 16 | exponent << 13 | fraction << 13);\n    return tempDataView.getFloat32(0);\n  }\n  function readFloat32() {\n    return commitRead(4, dataView.getFloat32(offset));\n  }\n  function readFloat64() {\n    return commitRead(8, dataView.getFloat64(offset));\n  }\n  function readUint8() {\n    return commitRead(1, dataView.getUint8(offset));\n  }\n  function readUint16() {\n    return commitRead(2, dataView.getUint16(offset));\n  }\n  function readUint32() {\n    return commitRead(4, dataView.getUint32(offset));\n  }\n  function readUint64() {\n    return readUint32() * POW_2_32 + readUint32();\n  }\n  function readBreak() {\n    if (dataView.getUint8(offset) !== 0xff)\n      return false;\n    offset += 1;\n    return true;\n  }\n  function readLength(additionalInformation) {\n    if (additionalInformation < 24)\n      return additionalInformation;\n    if (additionalInformation === 24)\n      return readUint8();\n    if (additionalInformation === 25)\n      return readUint16();\n    if (additionalInformation === 26)\n      return readUint32();\n    if (additionalInformation === 27)\n      return readUint64();\n    if (additionalInformation === 31)\n      return -1;\n    throw \"Invalid length encoding\";\n  }\n  function readIndefiniteStringLength(majorType) {\n    var initialByte = readUint8();\n    if (initialByte === 0xff)\n      return -1;\n    var length = readLength(initialByte & 0x1f);\n    if (length < 0 || (initialByte >> 5) !== majorType)\n      throw \"Invalid indefinite length element\";\n    return length;\n  }\n\n  function appendUtf16Data(utf16data, length) {\n    for (var i = 0; i < length; ++i) {\n      var value = readUint8();\n      if (value & 0x80) {\n        if (value < 0xe0) {\n          value = (value & 0x1f) <<  6\n                | (readUint8() & 0x3f);\n          length -= 1;\n        } else if (value < 0xf0) {\n          value = (value & 0x0f) << 12\n                | (readUint8() & 0x3f) << 6\n                | (readUint8() & 0x3f);\n          length -= 2;\n        } else {\n          value = (value & 0x0f) << 18\n                | (readUint8() & 0x3f) << 12\n                | (readUint8() & 0x3f) << 6\n                | (readUint8() & 0x3f);\n          length -= 3;\n        }\n      }\n\n      if (value < 0x10000) {\n        utf16data.push(value);\n      } else {\n        value -= 0x10000;\n        utf16data.push(0xd800 | (value >> 10));\n        utf16data.push(0xdc00 | (value & 0x3ff));\n      }\n    }\n  }\n\n  function decodeItem() {\n    var initialByte = readUint8();\n    var majorType = initialByte >> 5;\n    var additionalInformation = initialByte & 0x1f;\n    var i;\n    var length;\n\n    if (majorType === 7) {\n      switch (additionalInformation) {\n        case 25:\n          return readFloat16();\n        case 26:\n          return readFloat32();\n        case 27:\n          return readFloat64();\n      }\n    }\n\n    length = readLength(additionalInformation);\n    if (length < 0 && (majorType < 2 || 6 < majorType))\n      throw \"Invalid length\";\n\n    switch (majorType) {\n      case 0:\n        return length;\n      case 1:\n        return -1 - length;\n      case 2:\n        if (length < 0) {\n          var elements = [];\n          var fullArrayLength = 0;\n          while ((length = readIndefiniteStringLength(majorType)) >= 0) {\n            fullArrayLength += length;\n            elements.push(readArrayBuffer(length));\n          }\n          var fullArray = new Uint8Array(fullArrayLength);\n          var fullArrayOffset = 0;\n          for (i = 0; i < elements.length; ++i) {\n            fullArray.set(elements[i], fullArrayOffset);\n            fullArrayOffset += elements[i].length;\n          }\n          return fullArray;\n        }\n        return readArrayBuffer(length);\n      case 3:\n        var utf16data = [];\n        if (length < 0) {\n          while ((length = readIndefiniteStringLength(majorType)) >= 0)\n            appendUtf16Data(utf16data, length);\n        } else\n          appendUtf16Data(utf16data, length);\n        return String.fromCharCode.apply(null, utf16data);\n      case 4:\n        var retArray;\n        if (length < 0) {\n          retArray = [];\n          while (!readBreak())\n            retArray.push(decodeItem());\n        } else {\n          retArray = new Array(length);\n          for (i = 0; i < length; ++i)\n            retArray[i] = decodeItem();\n        }\n        return retArray;\n      case 5:\n        var retObject = {};\n        for (i = 0; i < length || length < 0 && !readBreak(); ++i) {\n          var key = decodeItem();\n          retObject[key] = decodeItem();\n        }\n        return retObject;\n      case 6:\n        return tagger(decodeItem(), length);\n      case 7:\n        switch (length) {\n          case 20:\n            return false;\n          case 21:\n            return true;\n          case 22:\n            return null;\n          case 23:\n            return undefined;\n          default:\n            return simpleValue(length);\n        }\n    }\n  }\n\n  var ret = decodeItem();\n  if (offset !== data.byteLength)\n    throw \"Remaining bytes\";\n  return ret;\n}\n\nvar obj = { encode: encode, decode: decode };\n\n// if (typeof define === \"function\" && define.amd)\n//   define(\"cbor/cbor\", obj);\n// else \nif (typeof module !== \"undefined\" && module.exports)\n  module.exports = obj;\nelse if (!global.CBOR)\n  global.CBOR = obj;\n\n})(this);","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"auth_container__3M9A_\"};","import React, { useEffect } from 'react'\nimport { useHistory } from \"react-router-dom\";\nimport { webAuthnSignin, webAuthnSignup } from 'helpers/webauth'\nimport { ReduxProps } from './'\nimport styles from './auth.module.css'\n\n\nconst copyToClipboard = async (text: string) => {\n  await navigator.clipboard.writeText(text)\n};\n\nexport const Auth = (props: ReduxProps) => { \n  const { authenticated, password, logout, useFingerPrint } = props\n  const history = useHistory();\n\n  useEffect(() => {\n    if(authenticated) {\n      if(!password) {\n        logout()\n      } else if(useFingerPrint) {\n        const usersString = localStorage.getItem('users');\n        if(usersString) {\n          webAuthnSignin().then((response) => {\n            console.log(\"webAuthnSignin - response\", response)\n            copyToClipboard(JSON.stringify(response))\n            history.replace('/home')\n          })\n          .catch((error) => {\n            console.log(\"webAuthnSignin - error\", error)\n            copyToClipboard(JSON.stringify(error))\n            logout()\n          })\n        } else {\n          webAuthnSignup('randomUser').then((response) => {\n            copyToClipboard(JSON.stringify(response))\n            console.log(\"webAuthnSignin (randomUser) - response\", response)\n            history.replace('/home')\n          })\n          .catch((error) => {\n            copyToClipboard(JSON.stringify(error))\n            console.log(\"webAuthnSignin (randomUser) - error\", error)\n            logout()\n          })\n        }\n      } else if (!useFingerPrint) {\n        history.replace('/home')\n      }\n    }\n  }, [authenticated, history, password, logout, useFingerPrint])\n\n  return (\n    <div className={styles.container}>\n    </div>\n  )\n}\n\nexport default Auth","import { connect } from 'react-redux';\nimport { DVPState, RootAction } from 'redux/modules';\nimport { bindActionCreators, Dispatch } from 'redux';\nimport { logout } from 'redux/modules/auth/thunks'\nimport Component from './auth'\n\ninterface StateProps {\n  readonly authenticated: DVPState['auth']['authenticated'];\n  readonly useFingerPrint: DVPState['auth']['useFingerPrint'];\n  readonly password?: string;\n}\n\nconst mapStateToProps = (state: DVPState) => ({\n  authenticated: state.auth.authenticated,\n  password: state.auth.user?.password,\n  useFingerPrint: state.auth.useFingerPrint,\n})\n\ninterface DispatchProps {\n  logout: typeof logout\n}\n\nconst mapDispatchToProps = (dispatch: Dispatch<RootAction>) =>\n  bindActionCreators({\n    logout,\n  }, dispatch);\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Component)\nexport type ReduxProps = StateProps & DispatchProps\n","import * as TYPES from './types';\nimport { action } from 'typesafe-actions';\n\nexport const loginWithFirebaseFetching = () => action(\n  TYPES.AuthActionConst.LOGIN_FIREBASE_FETCHING,\n);\n\nexport const loginWithFirebaseFulfilled = (data: any, password:string) => action(\n  TYPES.AuthActionConst.LOGIN_FIREBASE_FULFILLED,\n  data,\n  password,\n);\n\nexport const loginWithFirebaseRejected = (error: TYPES.FirebaseError) => action(\n  TYPES.AuthActionConst.LOGIN_FIREBASE_REJECTED,\n  error,\n);\n\nexport const logoutFetching = () => action(\n  TYPES.AuthActionConst.LOGOUT_FETCHING,\n);\n\nexport const logoutFulfilled = () => action(\n  TYPES.AuthActionConst.LOGOUT_FULFILLED,\n);\n\nexport const logoutRejected = (error: TYPES.Error) => action(\n  TYPES.AuthActionConst.LOGOUT_REJECTED,\n  error\n);\n\nexport const setFingerPrint = (value: boolean) => action(\n  TYPES.AuthActionConst.SET_FINGER_PRINT,\n  value\n);\n\nexport const signUpWithFirebaseFetching = () => action(\n  TYPES.AuthActionConst.SIGN_UP_FIREBASE_FETCHING,\n);\n\nexport const signUpWithFirebaseFulfilled = (data: any) => action(\n  TYPES.AuthActionConst.SIGN_UP_FIREBASE_FULFILLED,\n  data,\n);\n\nexport const signUpWithFirebaseRejected = (error: TYPES.FirebaseError) => action(\n  TYPES.AuthActionConst.SIGN_UP_FIREBASE_REJECTED,\n  error,\n);"],"sourceRoot":""}