{"version":3,"sources":["components/shared/button/index.tsx","helpers/firebase/index.ts","components/shared/button/button.module.css","redux/modules/auth/thunks.ts","redux/modules/auth/actions.ts","components/shared/text-input/text-input.module.css","components/login/login.module.css","components/shared/text-input/index.tsx","components/login/login.tsx","components/login/index.ts"],"names":["Button","props","type","children","disabled","submitting","onClick","className","styles","button","size","color","loading","firebase","apiKey","process","authDomain","databaseURL","projectId","messagingSenderId","appId","module","exports","loginWithFirebase","params","dispatch","a","action","TYPES","LOGIN_FIREBASE_FETCHING","Firebase","auth","signInWithEmailAndPassword","email","trim","password","response","data","LOGIN_FIREBASE_FULFILLED","error","LOGIN_FIREBASE_REJECTED","logout","LOGOUT_FETCHING","signOut","LOGOUT_FULFILLED","LOGOUT_REJECTED","TextInput","meta","input","label","placeholder","container","labelText","touched","errorText","Login","isFetching","onSubmit","values","payload","code","FORM_ERROR","logoContainer","logoTitle","logoSubtitle","render","handleSubmit","submitError","form","name","component","loginButton","connect","state","bindActionCreators","Component"],"mappings":"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","file":"static/js/5.ff7e8050.chunk.js","sourcesContent":["import React from 'react';\nimport PulseLoader from 'react-spinners/PulseLoader'\nimport styles from './button.module.css';\n\ninterface Props {\n  children: React.ReactNode;\n  type?: \"button\" | \"submit\" | \"reset\" | undefined;\n  submitting?: boolean;\n  disabled?: boolean;\n  onClick?: (params?: any) => void;\n  className?: string;\n}\n\nexport const Button = (props: Props) => {\n\n  const { \n    type = 'button',\n    children,\n    disabled,\n    submitting,\n    onClick,\n    className\n  } = props\n\n  return (\n    <button \n      type={type}\n      disabled={disabled || submitting}\n      className={`${styles.button} ${className}`}\n      onClick={onClick}\n    >\n      {submitting \n        ? (<PulseLoader\n            size={5}\n            color={'#292724'}\n            loading={true}\n          />) \n        : children\n      }\n    </button>\n  );\n}\n\nexport default Button;\n","import * as firebase from 'firebase/app';\nimport 'firebase/auth';\nimport 'firebase/database';\nimport '@firebase/firestore'\n\nconst firebaseConfig = {\n  apiKey: process.env.REACT_APP_API_KEY,\n  authDomain: process.env.REACT_APP_AUTH_DOMAIN,\n  databaseURL: process.env.REACT_APP_DATABASE_URL,\n  projectId: process.env.REACT_APP_PROJECT_ID,\n  messagingSenderId: process.env.REACT_APP_MESSAGING_SENDER_ID,\n  appId: process.env.REACT_APP_APP_ID,\n};\n\nfirebase.initializeApp(firebaseConfig);\n\nexport default firebase;\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"button\":\"button_button__3p82B\"};","import * as TYPES from './types';\nimport * as ACTIONS from './actions';\nimport { ThunkDispatch } from 'redux-thunk';\nimport { DVPState } from 'redux/modules/index';\nimport { AnyAction } from 'redux';\nimport Firebase from 'helpers/firebase';\n\nexport const loginWithFirebase = (params: TYPES.LoginParams) =>\n  async (dispatch: ThunkDispatch<DVPState, {}, AnyAction>) => {\n    dispatch(ACTIONS.loginWithFirebaseFetching());\n    try {\n      const response: any = await Firebase.auth().signInWithEmailAndPassword(params.email.trim(), params.password.trim());\n      return dispatch(ACTIONS.loginWithFirebaseFulfilled(response));\n    }\n    catch (error) {\n      return dispatch(ACTIONS.loginWithFirebaseRejected(error));\n    }\n  };\n\nexport const logout: any = () => async (dispatch: ThunkDispatch<DVPState, {}, AnyAction>) => {\n  dispatch(ACTIONS.logoutFetching());\n  try {\n    await Firebase.auth().signOut();\n    return dispatch(ACTIONS.logoutFulfilled());\n  }\n  catch (error) {\n    return dispatch(ACTIONS.logoutRejected(error));\n  }\n};","import * as TYPES from './types';\nimport { action } from 'typesafe-actions';\n\nexport const loginWithFirebaseFetching = () => action(\n  TYPES.AuthActionConst.LOGIN_FIREBASE_FETCHING,\n);\n\nexport const loginWithFirebaseFulfilled = (data: any) => action(\n  TYPES.AuthActionConst.LOGIN_FIREBASE_FULFILLED,\n  data,\n);\n\nexport const loginWithFirebaseRejected = (error: TYPES.FirebaseError) => action(\n  TYPES.AuthActionConst.LOGIN_FIREBASE_REJECTED,\n  error,\n);\n\nexport const logoutFetching = () => action(\n  TYPES.AuthActionConst.LOGOUT_FETCHING,\n);\n\nexport const logoutFulfilled = () => action(\n  TYPES.AuthActionConst.LOGOUT_FULFILLED,\n);\n\nexport const logoutRejected = (error: TYPES.Error) => action(\n  TYPES.AuthActionConst.LOGOUT_REJECTED,\n  error\n);","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"text-input_container__-16Gn\",\"label\":\"text-input_label__1DFnE\",\"labelText\":\"text-input_labelText__3rZnL\",\"input\":\"text-input_input__iYmA8\",\"error\":\"text-input_error__1GFd1\",\"errorText\":\"text-input_errorText__1J0Vw\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"login_container__2teO8\",\"logoContainer\":\"login_logoContainer__tV7f5\",\"logoTitle\":\"login_logoTitle__3xBQ2\",\"logoSubtitle\":\"login_logoSubtitle__3MGg7\",\"form\":\"login_form__11Qp4\",\"loginButton\":\"login_loginButton__1Ntm-\",\"error\":\"login_error__1PEfx\"};","import React from 'react';\nimport { FieldRenderProps } from 'react-final-form';\nimport styles from './text-input.module.css';\n\ninterface Props extends FieldRenderProps<string, any> {\n  label?: string;\n  placeholder?: string;\n}\n\nexport const TextInput = (props: Props) => {\n\n  const { meta, input, label, placeholder } = props\n\n  return (\n    <div className={styles.container}>\n      <label className={styles.label}>\n        {label && (\n          <span className={styles.labelText}>\n            {label}\n          </span>\n        )}\n        <input \n          className={styles.input} \n          type=\"text\"\n          placeholder={placeholder}\n          {...input} \n        />\n      </label>\n      <div className={styles.error}>\n        {meta.error && meta.touched && (\n          <span className={styles.errorText}>\n            {meta.error}\n          </span>\n        )}\n      </div>\n    </div>\n  );\n}\n\nexport default TextInput;\n","import React from 'react'\nimport { Form, Field } from 'react-final-form'\nimport TextInput from 'components/shared/text-input'\nimport Button from 'components/shared/button'\nimport { FORM_ERROR } from 'final-form';\nimport { ReduxProps } from '.';\nimport styles from './login.module.css'\n\nexport const Login = (props: ReduxProps) => { \n  const { isFetching } = props\n\n  const onSubmit = async (values: any) => {\n    const { password, email } = values;\n    let error\n    try {\n      const response: any = await props.loginWithFirebase({ email, password });\n      switch (response.payload.code) {\n        case 'auth/user-not-found':\n          error = 'Usuario o contraseña incorrecta'\n          break\n        case 'auth/network-request-failed':\n          error = 'Error de conexión'\n          break\n        case 'auth/wrong-password':\n          error = 'Usuario o contraseña incorrecta'\n          break\n        case 'auth/argument-error':\n          error = 'Usuario o contraseña incorrecta'\n          break\n        case 'auth/too-many-requests':\n          error = 'Muchos intentos fallidos. Intente en unos minutos.'\n          break\n      }\n      if(error) {\n        return { [FORM_ERROR]: error };\n      }\n    }\n    catch (error) {\n      return { [FORM_ERROR]: error };\n    }\n  }\n\n  return (\n    <div className={styles.container}>\n      <div className={styles.logoContainer}>\n        <div className={styles.logoTitle}>\n          MyPassword\n        </div>\n        <div className={styles.logoSubtitle}>\n          Keep all your passwords in one place\n        </div>\n      </div>\n      <Form\n        onSubmit={onSubmit}\n        render={({ handleSubmit, submitError, values }) => (\n          <form onSubmit={handleSubmit} className={styles.form}>\n            <Field \n              name=\"email\"\n              placeholder=\"Email\"\n              type=\"text\"\n              component={TextInput}\n            />\n            <Field \n              name=\"password\"\n              placeholder=\"Password\"\n              type=\"password\"\n              component={TextInput} \n            />\n            <div className={styles.loginButton}>\n              <Button \n                type=\"submit\"\n                disabled={isFetching || !values.email || !values.password}\n                submitting={isFetching}\n                >\n                Login\n              </Button>\n            </div>\n            <div className={styles.error}>\n              {submitError}\n            </div>\n          </form>\n        )}\n      />\n    </div>\n  )\n}\n\nexport default Login","import { connect } from 'react-redux';\nimport { bindActionCreators, Dispatch } from 'redux';\nimport { DVPState, RootAction } from 'redux/modules';\nimport { loginWithFirebase } from 'redux/modules/auth/thunks';\nimport Component from './login'\n\ninterface StateProps {\n  readonly isFetching: DVPState['auth']['isFetching'];\n}\n\nconst mapStateToProps = (state: DVPState) => ({\n  isFetching: state.auth.isFetching,\n});\n\ninterface DispatchProps {\n  handleSubmit: () => void;\n  loginWithFirebase: typeof loginWithFirebase;\n}\n\nconst mapDispatchToProps = (dispatch: Dispatch<RootAction>) =>\n  bindActionCreators({\n    loginWithFirebase,\n  }, dispatch);\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Component)\nexport type ReduxProps = StateProps & DispatchProps\n"],"sourceRoot":""}