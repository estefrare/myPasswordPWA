{"version":3,"sources":["components/shared/button/index.tsx","helpers/firebase/index.ts","components/shared/button/button.module.css","redux/modules/auth/thunks.ts","redux/modules/auth/actions.ts","components/home/header/header.module.css","components/shared/modal/modal.module.css","components/home/card-list/card/card.module.css","components/home/card-list/card-list.module.css","components/home/home.module.css","components/home/header/header.tsx","components/home/header/index.ts","components/shared/modal/index.tsx","components/home/card-list/card/card.tsx","redux/modules/services/thunks.ts","redux/modules/services/actions.ts","components/home/card-list/card/index.ts","components/home/card-list/card-list.tsx","components/home/card-list/index.ts","components/home/index.tsx"],"names":["Button","props","type","children","disabled","submitting","onClick","className","styles","button","size","color","loading","firebase","apiKey","process","authDomain","databaseURL","projectId","messagingSenderId","appId","module","exports","loginWithFirebase","params","dispatch","a","action","TYPES","LOGIN_FIREBASE_FETCHING","Firebase","auth","signInWithEmailAndPassword","email","password","response","data","LOGIN_FIREBASE_FULFILLED","error","LOGIN_FIREBASE_REJECTED","logout","LOGOUT_FETCHING","signOut","LOGOUT_FULFILLED","LOGOUT_REJECTED","Header","container","connect","bindActionCreators","Component","ModalComponent","open","title","detail","close","callback","Modal","modalContainer","modal","modalHeader","body","buttons","cancel","Input","inputProps","input","placeholder","readOnly","useState","isDeletingMode","setDeleteMode","isEditing","setEditMode","service","isFetching","isDeleting","deleteServices","onSubmit","values","editServices","console","log","key","initialValues","render","handleSubmit","submitError","header","name","inputHeader","component","trashButton","inputContainer","buttonContainer","editButton","cancelButton","getServices","GET_SERVICES_FETCHING","uid","store","getState","user","firestore","collection","where","onSnapshot","querySnapshot","services","servicesList","forEach","documentSnapshot","push","id","GET_SERVICES_FULFILLED","GET_SERVICES_REJECTED","EDIT_SERVICES_FETCHING","ref","doc","update","username","link","note","EDIT_SERVICES_FULFILLED","EDIT_SERVICES_REJECTED","serviceId","DELETE_SERVICES_FETCHING","delete","DELETE_SERVICES_FULFILLED","DELETE_SERVICES_REJECTED","state","CardList","serviceList","filter","setFilter","useEffect","filterList","useMemo","toLocaleLowerCase","includes","value","onChange","e","target","list","map","Home","content"],"mappings":"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","file":"static/js/4.e6d11ea7.chunk.js","sourcesContent":["import React from 'react';\nimport PulseLoader from 'react-spinners/PulseLoader'\nimport styles from './button.module.css';\n\ninterface Props {\n  children: React.ReactNode;\n  type?: \"button\" | \"submit\" | \"reset\" | undefined;\n  submitting?: boolean;\n  disabled?: boolean;\n  onClick?: (params?: any) => void;\n  className?: string;\n}\n\nexport const Button = (props: Props) => {\n\n  const { \n    type = 'button',\n    children,\n    disabled,\n    submitting,\n    onClick,\n    className\n  } = props\n\n  return (\n    <button \n      type={type}\n      disabled={disabled ||Â submitting}\n      className={`${styles.button} ${className}`}\n      onClick={onClick}\n    >\n      {submitting \n        ? (<PulseLoader\n            size={5}\n            color={'#292724'}\n            loading={true}\n          />) \n        : children\n      }\n    </button>\n  );\n}\n\nexport default Button;\n","import * as firebase from 'firebase/app';\nimport 'firebase/auth';\nimport 'firebase/database';\nimport '@firebase/firestore'\n\nconst firebaseConfig = {\n  apiKey: process.env.REACT_APP_API_KEY,\n  authDomain: process.env.REACT_APP_AUTH_DOMAIN,\n  databaseURL: process.env.REACT_APP_DATABASE_URL,\n  projectId: process.env.REACT_APP_PROJECT_ID,\n  messagingSenderId: process.env.REACT_APP_MESSAGING_SENDER_ID,\n  appId: process.env.REACT_APP_APP_ID,\n};\n\nfirebase.initializeApp(firebaseConfig);\n\nexport default firebase;\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"button\":\"button_button__3p82B\"};","import * as TYPES from './types';\nimport * as ACTIONS from './actions';\nimport { ThunkDispatch } from 'redux-thunk';\nimport { DVPState } from 'redux/modules/index';\nimport { AnyAction } from 'redux';\nimport Firebase from 'helpers/firebase';\n\nexport const loginWithFirebase = (params: TYPES.LoginParams) =>\n  async (dispatch: ThunkDispatch<DVPState, {}, AnyAction>) => {\n    dispatch(ACTIONS.loginWithFirebaseFetching());\n    try {\n      const response: any = await Firebase.auth().signInWithEmailAndPassword(params.email, params.password);\n      return dispatch(ACTIONS.loginWithFirebaseFulfilled(response));\n    }\n    catch (error) {\n      return dispatch(ACTIONS.loginWithFirebaseRejected(error));\n    }\n  };\n\nexport const logout: any = () => async (dispatch: ThunkDispatch<DVPState, {}, AnyAction>) => {\n  dispatch(ACTIONS.logoutFetching());\n  try {\n    await Firebase.auth().signOut();\n    return dispatch(ACTIONS.logoutFulfilled());\n  }\n  catch (error) {\n    return dispatch(ACTIONS.logoutRejected(error));\n  }\n};","import * as TYPES from './types';\nimport { action } from 'typesafe-actions';\n\nexport const loginWithFirebaseFetching = () => action(\n  TYPES.AuthActionConst.LOGIN_FIREBASE_FETCHING,\n);\n\nexport const loginWithFirebaseFulfilled = (data: any) => action(\n  TYPES.AuthActionConst.LOGIN_FIREBASE_FULFILLED,\n  data,\n);\n\nexport const loginWithFirebaseRejected = (error: TYPES.FirebaseError) => action(\n  TYPES.AuthActionConst.LOGIN_FIREBASE_REJECTED,\n  error,\n);\n\nexport const logoutFetching = () => action(\n  TYPES.AuthActionConst.LOGOUT_FETCHING,\n);\n\nexport const logoutFulfilled = () => action(\n  TYPES.AuthActionConst.LOGOUT_FULFILLED,\n);\n\nexport const logoutRejected = (error: TYPES.Error) => action(\n  TYPES.AuthActionConst.LOGOUT_REJECTED,\n  error\n);","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"header_container__3NZ39\",\"logout\":\"header_logout__3aRDT\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"modalContainer\":\"modal_modalContainer__1B0MT\",\"modal\":\"modal_modal__1jijj\",\"modalHeader\":\"modal_modalHeader__3lf-q\",\"body\":\"modal_body__2LAWM\",\"detail\":\"modal_detail__1dAuZ\",\"buttons\":\"modal_buttons__1Nv22\",\"button\":\"modal_button__V_ZdM\",\"cancel\":\"modal_cancel__3W0Eq\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"card_container__3tCt9\",\"header\":\"card_header__wc7S7\",\"body\":\"card_body__3nyRW\",\"input\":\"card_input__1kdIr\",\"inputHeader\":\"card_inputHeader__1B3WU\",\"inputContainer\":\"card_inputContainer__2eGTn\",\"buttonContainer\":\"card_buttonContainer__1SWkH\",\"editButton\":\"card_editButton__jkuRP\",\"cancelButton\":\"card_cancelButton__CnCuW\",\"trashButton\":\"card_trashButton__4ZYXD\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"card-list_container__25JrY\",\"list\":\"card-list_list__3Ylhw\",\"input\":\"card-list_input__pRFh7\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"home_container__2grJ2\",\"content\":\"home_content__3eJuK\"};","import React from 'react';\nimport styles from './header.module.css'\nimport Button from 'components/shared/button'\nimport { ReduxProps } from './'\n\n\nexport const Header = (props: ReduxProps) => {\n  return (\n    <div className={styles.container}>\n      <div className={styles.logout}>\n        <Button onClick={props.logout}>\n          Logout\n        </Button>\n      </div>\n    </div>\n  )\n}\n\nexport default Header","import Component from './header'\nimport { connect } from 'react-redux'\nimport { bindActionCreators, Dispatch } from 'redux';\nimport { RootAction } from 'redux/modules';\nimport { logout } from 'redux/modules/auth/thunks'\n\ninterface DispatchProps {\n  logout: typeof logout\n}\n\nconst mapDispatchToProps = (dispatch: Dispatch<RootAction>) =>\n  bindActionCreators({\n    logout,\n  }, dispatch);\n\nexport default connect(null, mapDispatchToProps)(Component)\nexport type ReduxProps = DispatchProps","import React from 'react'\nimport Modal from '@material-ui/core/Modal';\nimport Button from 'components/shared/button'\nimport styles from './modal.module.css'\n\ninterface Props {\n  open: boolean;\n  title: string;\n  detail: string;\n  submitting?: boolean;\n  close: () => void;\n  callback: (params: any) => void;\n}\n\nconst ModalComponent = (props: Props) => {\n\n  const { \n    open, \n    title, \n    detail,\n    close,\n    callback,\n    submitting\n  } = props\n\n  return (\n    <Modal\n    className={styles.modalContainer}\n    open={open}\n  >\n    <div className={styles.modal}>\n      <div className={styles.modalHeader}>\n        {title}\n      </div>\n      <div className={styles.body}>\n        <div className={styles.detail}>\n          {detail}\n        </div>\n        <div className={styles.buttons}>\n          <Button\n            submitting={submitting}\n            onClick={callback}\n            className={styles.button}\n          >\n            Yes\n          </Button>\n          <Button\n            disabled={submitting}\n            onClick={close} \n            className={`${styles.button} ${styles.cancel}`}\n          >\n            Cancel\n          </Button>\n        </div>\n      </div>\n    </div>\n  </Modal>\n  )\n}\n\nexport default ModalComponent","import React, { useState } from 'react';\nimport { Form, Field, FieldRenderProps } from 'react-final-form'\nimport { Service } from 'redux/modules/services/types'\nimport Button from 'components/shared/button'\nimport Modal from 'components/shared/modal'\nimport { ReduxProps } from '.'\nimport styles from './card.module.css'\n\ninterface Props extends ReduxProps {\n  service: Service;\n}\n\ninterface InputProps extends FieldRenderProps<string, any> {\n  placeholder?: string;\n  className?: string;\n}\n\nconst Input = (inputProps: InputProps) => {\n  const { input, placeholder, className, readOnly } = inputProps\n  return <input\n    className={`${styles.input} ${className}`} \n    readOnly={readOnly}\n    placeholder={placeholder} \n    {...input}\n  />\n}\n\nexport const Header = (props: Props) => {\n\n  const [ isDeletingMode, setDeleteMode ] = useState(false)\n  const [ isEditing, setEditMode ] = useState(false)\n  const { service, isFetching, isDeleting, deleteServices } = props\n\n  const onSubmit = async (values: any) => {\n    try {\n      await props.editServices(values)\n    }\n    catch (error)Â {\n      console.log(error)\n    }\n    finally {\n      setEditMode(false)\n    }\n  }\n\n  return (\n    <div className={styles.container}>\n      <Modal\n        open={isDeletingMode}\n        close={() => setDeleteMode(false)}\n        callback={() => deleteServices(service.key)}\n        title=\"Delete\"\n        detail=\"Are you sure you want to delete this item?\"\n        submitting={isDeleting}\n      />\n      <Form\n        initialValues={service}\n        onSubmit={onSubmit}\n        render={({ handleSubmit, submitError, values }) => (\n          <>\n            <div className={styles.header}>\n              <Field \n                name=\"name\"\n                placeholder=\"Name\"\n                type=\"text\"\n                className={styles.inputHeader}\n                component={Input}\n                readOnly={!isEditing}\n              />\n              <button onClick={() => setDeleteMode(true)} className={styles.trashButton}>\n                <i className=\"material-icons\">delete_outline</i>\n              </button>\n            </div>\n            <div className={styles.body}>\n              <div className={styles.inputContainer}>\n                <Field \n                  name=\"username\"\n                  placeholder=\"Username\"\n                  type=\"text\"\n                  className={styles.inputHeader}\n                  component={Input}\n                  readOnly={!isEditing}\n                />\n              </div>\n              <div className={styles.inputContainer}>\n                <Field \n                  name=\"password\"\n                  placeholder=\"Password\"\n                  type=\"password\"\n                  className={styles.inputHeader}\n                  component={Input}\n                  readOnly={!isEditing}\n                />\n              </div>\n              <div className={styles.buttonContainer}>\n                <Button\n                  submitting={isEditing && isFetching}\n                  className={styles.editButton}\n                  onClick={isEditing \n                    ? handleSubmit\n                    : () => setEditMode(true)}\n                >\n                  {isEditing ? 'Save' : 'Edit'}\n                </Button>\n                {isEditing && (\n                  <Button\n                    className={`${styles.editButton} ${styles.cancelButton}`}\n                    onClick={() => setEditMode(!isEditing)}\n                  >\n                    Cancel\n                  </Button>\n                )}\n              </div>\n            </div>\n          </>\n        )}\n      />\n    </div>\n  )\n}\n\nexport default Header","import * as TYPES from './types';\nimport * as ACTIONS from './actions';\nimport { ThunkDispatch } from 'redux-thunk';\nimport { DVPState } from 'redux/modules/index';\nimport { AnyAction } from 'redux';\nimport { store } from 'redux/store';\nimport Firebase from 'helpers/firebase';\n\nexport const getServices: any = () => async (dispatch: ThunkDispatch<DVPState, {}, AnyAction>) => {\n  dispatch(ACTIONS.getServicesFetching());\n  try {\n    const uid = store.getState().auth.user?.uid;\n    await Firebase.firestore()\n      .collection('services')\n      .where('userId', '==', uid)\n      .onSnapshot((querySnapshot: any) => {\n        const servicesList: TYPES.Service[] = [];\n        querySnapshot.forEach((documentSnapshot: any) => {\n          servicesList.push({\n            ...documentSnapshot.data(),\n            key: documentSnapshot.id,\n          });\n        });\n        return dispatch(ACTIONS.getServicesFulfilled(servicesList));\n      })\n    \n  }\n  catch (error) {\n    return dispatch(ACTIONS.getServicesRejected(error));\n  }\n};\n\nexport const editServices: any = (service: TYPES.Service) => async (dispatch: ThunkDispatch<DVPState, {}, AnyAction>) => {\n  dispatch(ACTIONS.editServicesFetching());\n  try {\n    const ref = Firebase.firestore().collection('services').doc(service.key);\n    await ref.update({\n      name: service.name,\n      username: service.username,\n      password: service.password,\n      link: service.link,\n      note: service.note,\n    });\n    return dispatch(ACTIONS.editServicesFulfilled());\n  }\n  catch (error) {\n    return dispatch(ACTIONS.editServicesRejected(error));\n  }\n};\n\nexport const deleteServices: any = (serviceId: TYPES.Service['key']) => async (dispatch: ThunkDispatch<DVPState, {}, AnyAction>) => {\n  dispatch(ACTIONS.deleteServicesFetching());\n  try {\n    await Firebase.firestore().collection('services').doc(serviceId).delete();\n    return dispatch(ACTIONS.deleteServicesFulfilled());\n  }\n  catch (error) {\n    return dispatch(ACTIONS.deleteServicesRejected(error));\n  }\n};","import * as TYPES from './types';\nimport { action } from 'typesafe-actions';\n\nexport const getServicesFetching = () => action(\n  TYPES.ServicesActionConst.GET_SERVICES_FETCHING,\n);\n\nexport const getServicesFulfilled = (services: TYPES.Service[]) => action(\n  TYPES.ServicesActionConst.GET_SERVICES_FULFILLED,\n  services\n);\n\nexport const getServicesRejected = (error: TYPES.Error) => action(\n  TYPES.ServicesActionConst.GET_SERVICES_REJECTED,\n  error\n);\n\nexport const editServicesFetching = () => action(\n  TYPES.ServicesActionConst.EDIT_SERVICES_FETCHING,\n);\n\nexport const editServicesFulfilled = () => action(\n  TYPES.ServicesActionConst.EDIT_SERVICES_FULFILLED,\n);\n\nexport const editServicesRejected = (error: TYPES.Error) => action(\n  TYPES.ServicesActionConst.EDIT_SERVICES_REJECTED,\n  error\n);\n\nexport const deleteServicesFetching = () => action(\n  TYPES.ServicesActionConst.DELETE_SERVICES_FETCHING,\n);\n\nexport const deleteServicesFulfilled = () => action(\n  TYPES.ServicesActionConst.DELETE_SERVICES_FULFILLED,\n);\n\nexport const deleteServicesRejected = (error: TYPES.Error) => action(\n  TYPES.ServicesActionConst.DELETE_SERVICES_REJECTED,\n  error\n);","import Component from './card'\nimport { connect } from 'react-redux'\nimport { bindActionCreators, Dispatch } from 'redux';\nimport { RootAction, DVPState } from 'redux/modules';\nimport { editServices, deleteServices } from 'redux/modules/services/thunks'\n\ninterface StateProps {\n  readonly isFetching: DVPState['services']['isFetching'];\n  readonly isDeleting: DVPState['services']['isDeleting'];\n}\n\nconst mapStateToProps = (state: DVPState) => ({\n  isFetching: state.services.isFetching,\n  isDeleting: state.services.isDeleting,\n});\n\ninterface DispatchProps {\n  editServices: typeof editServices;\n  deleteServices: typeof deleteServices;\n}\n\nconst mapDispatchToProps = (dispatch: Dispatch<RootAction>) =>\n  bindActionCreators({\n    editServices,\n    deleteServices,\n  }, dispatch);\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Component)\nexport type ReduxProps = StateProps & DispatchProps","import React, { useEffect, useMemo, useState } from 'react';\nimport Card from './card'\nimport { ReduxProps } from '.'\nimport styles from './card-list.module.css'\n\nexport const CardList = (props: ReduxProps) => {\n\n  const { getServices, serviceList } = props\n  const [filter, setFilter] = useState('');\n\n  useEffect(() => {\n    getServices()\n  }, [getServices])\n\n  const filterList = useMemo(() => {\n    return serviceList.filter((service) =>\n      service.name.toLocaleLowerCase().includes(filter.toLocaleLowerCase()),\n    );\n  }, [filter, serviceList]);\n\n  return (\n    <div className={styles.container}>\n      <div>\n        <input\n          placeholder=\"Search\"\n          className={styles.input}\n          value={filter}\n          onChange={(e) => setFilter(e.target.value)} \n          />\n        <i className=\"material-icons\">search</i>\n      </div>\n      <div className={styles.list}>\n        {filterList.map((service) => <Card key={service.name} service={service} />)}\n      </div>\n    </div>\n  )\n}\n\nexport default CardList","import Component from './card-list'\nimport { connect } from 'react-redux'\nimport { bindActionCreators, Dispatch } from 'redux';\nimport { RootAction, DVPState } from 'redux/modules';\nimport { getServices } from 'redux/modules/services/thunks'\n\ninterface StateProps {\n  readonly serviceList: DVPState['services']['list'];\n}\n\nconst mapStateToProps = (state: DVPState) => ({\n  serviceList: state.services.list,\n});\n\ninterface DispatchProps {\n  getServices: typeof getServices\n}\n\nconst mapDispatchToProps = (dispatch: Dispatch<RootAction>) =>\n  bindActionCreators({\n    getServices,\n  }, dispatch);\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Component)\nexport type ReduxProps = StateProps & DispatchProps","import React from 'react';\nimport Header from './header'\nimport CardList from './card-list'\nimport styles from './home.module.css'\n\nexport const Home = () => {\n  return (\n    <div className={styles.container}>\n      <Header />\n      <div className={styles.content}>\n        <CardList />\n      </div>\n    </div>\n  )\n}\n\nexport default Home"],"sourceRoot":""}