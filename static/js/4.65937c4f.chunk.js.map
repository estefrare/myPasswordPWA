{"version":3,"sources":["components/shared/button/index.tsx","helpers/firebase/index.ts","components/shared/button/button.module.css","redux/modules/auth/thunks.ts","redux/modules/auth/actions.ts","components/home/header/header.module.css","components/shared/modal/modal.module.css","components/home/card-list/card/card.module.css","components/home/card-list/card-list.module.css","components/home/home.module.css","components/home/header/header.tsx","components/home/header/index.ts","components/shared/modal/index.tsx","components/home/card-list/card/card.tsx","helpers/utils/index.ts","redux/modules/services/thunks.ts","redux/modules/services/actions.ts","components/home/card-list/card/index.ts","components/home/card-list/card-list.tsx","components/home/card-list/index.ts","components/home/index.tsx"],"names":["Button","props","type","children","disabled","submitting","onClick","className","styles","button","size","color","loading","firebase","apiKey","process","authDomain","databaseURL","projectId","messagingSenderId","appId","module","exports","loginWithFirebase","params","dispatch","a","action","TYPES","LOGIN_FIREBASE_FETCHING","Firebase","auth","signInWithEmailAndPassword","email","trim","password","response","data","LOGIN_FIREBASE_FULFILLED","error","LOGIN_FIREBASE_REJECTED","logout","LOGOUT_FETCHING","signOut","LOGOUT_FULFILLED","LOGOUT_REJECTED","Header","container","logoutButton","connect","bindActionCreators","Component","ModalComponent","open","title","detail","close","callback","Modal","modalContainer","modal","modalHeader","body","buttons","cancel","Input","inputProps","input","placeholder","readOnly","useState","isDeletingMode","setDeleteMode","isShowingPassword","setShowPassword","isEditing","setEditMode","serviceValue","isFetching","isDeleting","deleteServices","isAdding","cancelAdding","onSubmit","values","addServices","editServices","console","log","handleCancel","useCallback","copyToClipboard","text","textField","document","createElement","innerText","appendChild","select","execCommand","remove","key","initialValues","mutators","setValue","state","field","value","changeValue","render","handleSubmit","form","pristine","header","name","inputHeader","component","trashButton","inputContainer","username","Math","floor","random","pos","length","generatePassword","link","note","buttonContainer","editButton","cancelButton","getServices","GET_SERVICES_FETCHING","uid","store","getState","user","firestore","collection","where","onSnapshot","querySnapshot","services","servicesList","forEach","documentSnapshot","push","id","GET_SERVICES_FULFILLED","GET_SERVICES_REJECTED","service","EDIT_SERVICES_FETCHING","ref","doc","update","EDIT_SERVICES_FULFILLED","EDIT_SERVICES_REJECTED","serviceId","DELETE_SERVICES_FETCHING","delete","DELETE_SERVICES_FULFILLED","DELETE_SERVICES_REJECTED","ADD_SERVICES_FETCHING","add","userId","ADD_SERVICES_FULFILLED","ADD_SERVICES_REJECTED","emptyService","ownProps","CardList","serviceList","filter","setFilter","useEffect","filterList","useMemo","toLocaleLowerCase","includes","onChange","e","target","list","loader","map","Home","isAddMode","setAddMode","content","addButton"],"mappings":"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","file":"static/js/4.65937c4f.chunk.js","sourcesContent":["import React from 'react';\nimport PulseLoader from 'react-spinners/PulseLoader'\nimport styles from './button.module.css';\n\ninterface Props {\n  children: React.ReactNode;\n  type?: \"button\" | \"submit\" | \"reset\" | undefined;\n  submitting?: boolean;\n  disabled?: boolean;\n  onClick?: (params?: any) => void;\n  className?: string;\n}\n\nexport const Button = (props: Props) => {\n\n  const { \n    type = 'button',\n    children,\n    disabled,\n    submitting,\n    onClick,\n    className\n  } = props\n\n  return (\n    <button \n      type={type}\n      disabled={disabled || submitting}\n      className={`${styles.button} ${className}`}\n      onClick={onClick}\n    >\n      {submitting \n        ? (<PulseLoader\n            size={5}\n            color={'#292724'}\n            loading={true}\n          />) \n        : children\n      }\n    </button>\n  );\n}\n\nexport default Button;\n","import * as firebase from 'firebase/app';\nimport 'firebase/auth';\nimport 'firebase/database';\nimport '@firebase/firestore'\n\nconst firebaseConfig = {\n  apiKey: process.env.REACT_APP_API_KEY,\n  authDomain: process.env.REACT_APP_AUTH_DOMAIN,\n  databaseURL: process.env.REACT_APP_DATABASE_URL,\n  projectId: process.env.REACT_APP_PROJECT_ID,\n  messagingSenderId: process.env.REACT_APP_MESSAGING_SENDER_ID,\n  appId: process.env.REACT_APP_APP_ID,\n};\n\nfirebase.initializeApp(firebaseConfig);\n\nexport default firebase;\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"button\":\"button_button__3p82B\"};","import * as TYPES from './types';\nimport * as ACTIONS from './actions';\nimport { ThunkDispatch } from 'redux-thunk';\nimport { DVPState } from 'redux/modules/index';\nimport { AnyAction } from 'redux';\nimport Firebase from 'helpers/firebase';\n\nexport const loginWithFirebase = (params: TYPES.LoginParams) =>\n  async (dispatch: ThunkDispatch<DVPState, {}, AnyAction>) => {\n    dispatch(ACTIONS.loginWithFirebaseFetching());\n    try {\n      const response: any = await Firebase.auth().signInWithEmailAndPassword(params.email.trim(), params.password.trim());\n      return dispatch(ACTIONS.loginWithFirebaseFulfilled(response));\n    }\n    catch (error) {\n      return dispatch(ACTIONS.loginWithFirebaseRejected(error));\n    }\n  };\n\nexport const logout: any = () => async (dispatch: ThunkDispatch<DVPState, {}, AnyAction>) => {\n  dispatch(ACTIONS.logoutFetching());\n  try {\n    await Firebase.auth().signOut();\n    return dispatch(ACTIONS.logoutFulfilled());\n  }\n  catch (error) {\n    return dispatch(ACTIONS.logoutRejected(error));\n  }\n};","import * as TYPES from './types';\nimport { action } from 'typesafe-actions';\n\nexport const loginWithFirebaseFetching = () => action(\n  TYPES.AuthActionConst.LOGIN_FIREBASE_FETCHING,\n);\n\nexport const loginWithFirebaseFulfilled = (data: any) => action(\n  TYPES.AuthActionConst.LOGIN_FIREBASE_FULFILLED,\n  data,\n);\n\nexport const loginWithFirebaseRejected = (error: TYPES.FirebaseError) => action(\n  TYPES.AuthActionConst.LOGIN_FIREBASE_REJECTED,\n  error,\n);\n\nexport const logoutFetching = () => action(\n  TYPES.AuthActionConst.LOGOUT_FETCHING,\n);\n\nexport const logoutFulfilled = () => action(\n  TYPES.AuthActionConst.LOGOUT_FULFILLED,\n);\n\nexport const logoutRejected = (error: TYPES.Error) => action(\n  TYPES.AuthActionConst.LOGOUT_REJECTED,\n  error\n);","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"header_container__3NZ39\",\"logout\":\"header_logout__3aRDT\",\"logoutButton\":\"header_logoutButton__2_kSa\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"modalContainer\":\"modal_modalContainer__1B0MT\",\"modal\":\"modal_modal__1jijj\",\"modalHeader\":\"modal_modalHeader__3lf-q\",\"body\":\"modal_body__2LAWM\",\"detail\":\"modal_detail__1dAuZ\",\"buttons\":\"modal_buttons__1Nv22\",\"button\":\"modal_button__V_ZdM\",\"cancel\":\"modal_cancel__3W0Eq\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"card_container__3tCt9\",\"header\":\"card_header__wc7S7\",\"body\":\"card_body__3nyRW\",\"input\":\"card_input__1kdIr\",\"inputHeader\":\"card_inputHeader__1B3WU\",\"inputContainer\":\"card_inputContainer__2eGTn\",\"buttonContainer\":\"card_buttonContainer__1SWkH\",\"editButton\":\"card_editButton__jkuRP\",\"cancelButton\":\"card_cancelButton__CnCuW\",\"trashButton\":\"card_trashButton__4ZYXD\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"card-list_container__25JrY\",\"list\":\"card-list_list__3Ylhw\",\"input\":\"card-list_input__pRFh7\",\"loader\":\"card-list_loader__3lAiD\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"home_container__2grJ2\",\"content\":\"home_content__3eJuK\",\"addButton\":\"home_addButton__1VNOb\"};","import React from 'react';\nimport styles from './header.module.css'\nimport Button from 'components/shared/button'\nimport { ReduxProps } from './'\n\n\nexport const Header = (props: ReduxProps) => {\n  return (\n    <div className={styles.container}>\n      <div className={styles.logout}>\n        <Button className={styles.logoutButton} onClick={props.logout}>\n          Logout\n        </Button>\n      </div>\n    </div>\n  )\n}\n\nexport default Header","import Component from './header'\nimport { connect } from 'react-redux'\nimport { bindActionCreators, Dispatch } from 'redux';\nimport { RootAction } from 'redux/modules';\nimport { logout } from 'redux/modules/auth/thunks'\n\ninterface DispatchProps {\n  logout: typeof logout\n}\n\nconst mapDispatchToProps = (dispatch: Dispatch<RootAction>) =>\n  bindActionCreators({\n    logout,\n  }, dispatch);\n\nexport default connect(null, mapDispatchToProps)(Component)\nexport type ReduxProps = DispatchProps","import React from 'react'\nimport Modal from '@material-ui/core/Modal';\nimport Button from 'components/shared/button'\nimport styles from './modal.module.css'\n\ninterface Props {\n  open: boolean;\n  title: string;\n  detail: string;\n  submitting?: boolean;\n  close: () => void;\n  callback: (params: any) => void;\n  children?: React.ReactElement;\n}\n\nconst ModalComponent = (props: Props) => {\n\n  const { \n    open, \n    title, \n    detail,\n    close,\n    callback,\n    submitting,\n    children,\n  } = props\n\n  return (\n    <Modal\n    className={styles.modalContainer}\n    open={open}\n  >\n    {children || (\n        <div className={styles.modal}>\n          <div className={styles.modalHeader}>\n            {title}\n          </div>\n          <div className={styles.body}>\n            <div className={styles.detail}>\n              {detail}\n            </div>\n            <div className={styles.buttons}>\n              <Button\n                submitting={submitting}\n                onClick={callback}\n                className={styles.button}\n              >\n                Yes\n              </Button>\n              <Button\n                disabled={submitting}\n                onClick={close} \n                className={`${styles.button} ${styles.cancel}`}\n              >\n                Cancel\n              </Button>\n            </div>\n          </div>\n        </div>\n      )}\n  </Modal>\n  )\n}\n\nexport default ModalComponent","import React, { useState, useCallback } from 'react';\nimport { Form, Field, FieldRenderProps } from 'react-final-form'\nimport Button from 'components/shared/button'\nimport Modal from 'components/shared/modal'\nimport { generatePassword } from 'helpers/utils'\nimport { ReduxProps } from '.'\nimport styles from './card.module.css'\n\ninterface Props extends ReduxProps {\n  isAdding?: boolean;\n  cancelAdding?: () => void;\n}\n\ninterface InputProps extends FieldRenderProps<string, any> {\n  placeholder?: string;\n  className?: string;\n}\n\nconst Input = (inputProps: InputProps) => {\n  const { input, placeholder, className, readOnly } = inputProps\n  return <input\n    className={`${styles.input} ${className}`} \n    readOnly={readOnly}\n    placeholder={placeholder} \n    {...input}\n  />\n}\n\nexport const Header = (props: Props) => {\n\n  const [ isDeletingMode, setDeleteMode ] = useState(false)\n  const [ isShowingPassword, setShowPassword ] = useState(false)\n  const [ isEditing, setEditMode ] = useState(false)\n  const { \n    serviceValue, \n    isFetching, \n    isDeleting, \n    deleteServices,\n    isAdding,\n    cancelAdding\n  } = props\n\n  const onSubmit = async (values: any) => {\n    try {\n      if(isAdding) {\n        await props.addServices(values)\n      } else if (isEditing) {\n        await props.editServices(values)\n      }\n    }\n    catch (error) {\n      console.log(error)\n    }\n    finally {\n      cancelAdding && cancelAdding()\n      setEditMode(false)\n    }\n  }\n\n  const handleCancel = useCallback(() => {\n    if(isEditing) {\n      setEditMode(false)\n    }\n    else if(isAdding) {\n      cancelAdding && cancelAdding()\n    }\n  }, [isEditing, isAdding, cancelAdding, setEditMode])\n\n  const copyToClipboard = (text: string) => {\n    const textField = document.createElement('textarea');\n    textField.innerText = text;\n    document.body.appendChild(textField);\n    textField.select();\n    document.execCommand('copy');\n    textField.remove();\n  };\n\n  return (\n    <div className={styles.container}>\n      <Modal\n        open={isDeletingMode}\n        close={() => setDeleteMode(false)}\n        callback={() => deleteServices(serviceValue.key)}\n        title=\"Delete\"\n        detail=\"Are you sure you want to delete this item?\"\n        submitting={isDeleting}\n      />\n      <Form\n        initialValues={serviceValue}\n        onSubmit={onSubmit}\n        mutators={{\n          setValue: ([field, value], state, { changeValue }) => {\n            changeValue(state, field, () => value);\n          },\n        }}\n        render={({ handleSubmit, form, values, submitting, pristine }) => (\n          <>\n            <div className={styles.header}>\n              <Field \n                name=\"name\"\n                placeholder=\"Name\"\n                type=\"text\"\n                className={styles.inputHeader}\n                component={Input}\n                readOnly={!isEditing && !isAdding}\n              />\n              {!isAdding && (\n                <button onClick={() => setDeleteMode(true)} className={styles.trashButton}>\n                  <i className=\"material-icons\">delete_outline</i>\n                </button>\n              )}\n            </div>\n            <div className={styles.body}>\n              <div className={styles.inputContainer}>\n                <Field \n                  name=\"username\"\n                  placeholder=\"Username\"\n                  type=\"text\"\n                  className={styles.inputHeader}\n                  component={Input}\n                  readOnly={!isEditing && !isAdding}\n                />\n                { (!isEditing && !isAdding) && (\n                  <button \n                    onClick={() => copyToClipboard(serviceValue.username)}\n                    className={styles.trashButton}\n                  >\n                    <i className=\"material-icons\">file_copy</i>\n                  </button>\n                )}\n              </div>\n              <div className={styles.inputContainer}>\n                <Field \n                  name=\"password\"\n                  placeholder=\"Password\"\n                  type={(isShowingPassword || isEditing || isAdding) ? \"text\" : \"password\"}\n                  className={styles.inputHeader}\n                  component={Input}\n                  readOnly={!isEditing && !isAdding}\n                />\n                { (!isEditing && !isAdding) ? (\n                  <>\n                    <button \n                      onClick={() => setShowPassword(!isShowingPassword)} \n                      className={styles.trashButton}\n                    >\n                      <i className=\"material-icons\">{isShowingPassword ? 'visibility' : 'visibility_off'}</i>\n                    </button>\n                    <button \n                      onClick={() => copyToClipboard(serviceValue.password)}\n                      className={styles.trashButton}\n                    >\n                      <i className=\"material-icons\">file_copy</i>\n                    </button>\n                  </>\n                )\n                : (\n                  <button \n                    onClick={() => {\n                      form.mutators.setValue('password', generatePassword());\n                    }}\n                    className={styles.trashButton}\n                  >\n                    <i className=\"material-icons\">loop</i>\n                  </button>\n                )\n              }\n              </div>\n              {((isEditing || isAdding) || serviceValue.link) && (\n                <div className={styles.inputContainer}>\n                  <Field \n                    name=\"link\"\n                    placeholder=\"Link\"\n                    type={\"text\"}\n                    className={styles.inputHeader}\n                    component={Input}\n                    readOnly={!isEditing && !isAdding}\n                  />\n                </div>\n              )}\n               {((isEditing || isAdding) || serviceValue.note) && (\n                <div className={styles.inputContainer}>\n                  <Field \n                    name=\"note\"\n                    placeholder=\"Note\"\n                    type={\"text\"}\n                    className={styles.inputHeader}\n                    component={Input}\n                    readOnly={!isEditing && !isAdding}\n                  />\n                </div>\n              )}\n              <div className={styles.buttonContainer}>\n                <Button\n                  disabled={\n                    (isEditing && pristine) \n                    || submitting \n                    || !values.name \n                    || !values.username \n                    || !values.password\n                  }\n                  submitting={submitting && isFetching}\n                  className={styles.editButton}\n                  onClick={(isEditing || isAdding) \n                    ? handleSubmit\n                    : () => setEditMode(true)}\n                >\n                  {(isEditing || isAdding) ? 'Save' : 'Edit'}\n                </Button>\n                {(isEditing || isAdding) && (\n                  <Button\n                    disabled={submitting}\n                    className={`${styles.editButton} ${styles.cancelButton}`}\n                    onClick={handleCancel}\n                  >\n                    Cancel\n                  </Button>\n                )}\n              </div>\n            </div>\n          </>\n        )}\n      />\n    </div>\n  )\n}\n\nexport default Header","export const generatePassword = () => {\n  const specials = '!@#$%^&*()_+{}:\"<>?[]|/~-@';\n  const lowercase = 'abcdefghijklmnopqrstuvwxyz';\n  const uppercase = 'ABCDEFGHIJKLMNOPQRSTUVWXYZ';\n  const numbers = '01234567890123456789012345';\n  let type = Math.floor(Math.random() * (4 - 1) + 1)\n  let password = ''\n  do {\n    const pos = Math.floor(Math.random() * (10 - 1) + 1)\n    switch(type) {\n      case 1:\n        password += specials[pos]\n        type = 2\n        break\n      case 2:\n        password += lowercase[pos]\n        type = 3\n        break\n      case 3:\n        password += uppercase[pos]\n        type = 4\n        break\n      case 4:\n        password += numbers[pos]\n        type = 1\n        break\n    }\n  } while(password.length < 13)\n  return password\n}","import * as TYPES from './types';\nimport * as ACTIONS from './actions';\nimport { ThunkDispatch } from 'redux-thunk';\nimport { DVPState } from 'redux/modules/index';\nimport { AnyAction } from 'redux';\nimport { store } from 'redux/store';\nimport Firebase from 'helpers/firebase';\n\nexport const getServices: any = () => async (dispatch: ThunkDispatch<DVPState, {}, AnyAction>) => {\n  dispatch(ACTIONS.getServicesFetching());\n  try {\n    const uid = store.getState().auth.user?.uid;\n    await Firebase.firestore()\n      .collection('services')\n      .where('userId', '==', uid)\n      .onSnapshot((querySnapshot: any) => {\n        const servicesList: TYPES.Service[] = [];\n        querySnapshot.forEach((documentSnapshot: any) => {\n          servicesList.push({\n            ...documentSnapshot.data(),\n            key: documentSnapshot.id,\n          });\n        });\n        return dispatch(ACTIONS.getServicesFulfilled(servicesList));\n      })\n    \n  }\n  catch (error) {\n    return dispatch(ACTIONS.getServicesRejected(error));\n  }\n};\n\nexport const editServices: any = (service: TYPES.Service) => async (dispatch: ThunkDispatch<DVPState, {}, AnyAction>) => {\n  dispatch(ACTIONS.editServicesFetching());\n  try {\n    const ref = Firebase.firestore().collection('services').doc(service.key);\n    await ref.update({\n      name: service.name,\n      username: service.username,\n      password: service.password,\n      link: service.link || '',\n      note: service.note || '',\n    });\n    return dispatch(ACTIONS.editServicesFulfilled());\n  }\n  catch (error) {\n    return dispatch(ACTIONS.editServicesRejected(error));\n  }\n};\n\nexport const deleteServices: any = (serviceId: TYPES.Service['key']) => async (dispatch: ThunkDispatch<DVPState, {}, AnyAction>) => {\n  dispatch(ACTIONS.deleteServicesFetching());\n  try {\n    await Firebase.firestore().collection('services').doc(serviceId).delete();\n    return dispatch(ACTIONS.deleteServicesFulfilled());\n  }\n  catch (error) {\n    return dispatch(ACTIONS.deleteServicesRejected(error));\n  }\n};\n\nexport const addServices: any = (service: TYPES.Service) => async (dispatch: ThunkDispatch<DVPState, {}, AnyAction>) => {\n  dispatch(ACTIONS.addServicesFetching());\n  try {\n    const uid = store.getState().auth.user?.uid;\n    const ref = Firebase.firestore().collection('services');\n    await ref.add({\n      name: service.name,\n      username: service.username,\n      password: service.password,\n      link: service.link,\n      note: service.note,\n      userId: uid,\n    });\n\n    return dispatch(ACTIONS.addServicesFulfilled());\n  }\n  catch (error) {\n    return dispatch(ACTIONS.addServicesRejected(error));\n  }\n};","import * as TYPES from './types';\nimport { action } from 'typesafe-actions';\n\nexport const getServicesFetching = () => action(\n  TYPES.ServicesActionConst.GET_SERVICES_FETCHING,\n);\n\nexport const getServicesFulfilled = (services: TYPES.Service[]) => action(\n  TYPES.ServicesActionConst.GET_SERVICES_FULFILLED,\n  services\n);\n\nexport const getServicesRejected = (error: TYPES.Error) => action(\n  TYPES.ServicesActionConst.GET_SERVICES_REJECTED,\n  error\n);\n\nexport const editServicesFetching = () => action(\n  TYPES.ServicesActionConst.EDIT_SERVICES_FETCHING,\n);\n\nexport const editServicesFulfilled = () => action(\n  TYPES.ServicesActionConst.EDIT_SERVICES_FULFILLED,\n);\n\nexport const editServicesRejected = (error: TYPES.Error) => action(\n  TYPES.ServicesActionConst.EDIT_SERVICES_REJECTED,\n  error\n);\n\nexport const deleteServicesFetching = () => action(\n  TYPES.ServicesActionConst.DELETE_SERVICES_FETCHING,\n);\n\nexport const deleteServicesFulfilled = () => action(\n  TYPES.ServicesActionConst.DELETE_SERVICES_FULFILLED,\n);\n\nexport const deleteServicesRejected = (error: TYPES.Error) => action(\n  TYPES.ServicesActionConst.DELETE_SERVICES_REJECTED,\n  error\n);\n\nexport const addServicesFetching = () => action(\n  TYPES.ServicesActionConst.ADD_SERVICES_FETCHING,\n);\n\nexport const addServicesFulfilled = () => action(\n  TYPES.ServicesActionConst.ADD_SERVICES_FULFILLED,\n);\n\nexport const addServicesRejected = (error: TYPES.Error) => action(\n  TYPES.ServicesActionConst.ADD_SERVICES_REJECTED,\n  error\n);","import Component from './card'\nimport { connect } from 'react-redux'\nimport { bindActionCreators, Dispatch } from 'redux';\nimport { RootAction, DVPState } from 'redux/modules';\nimport { editServices, deleteServices, addServices } from 'redux/modules/services/thunks'\nimport { Service } from 'redux/modules/services/types'\n\ninterface StateProps {\n  readonly isFetching: DVPState['services']['isFetching'];\n  readonly isDeleting: DVPState['services']['isDeleting'];\n  serviceValue: Service;\n}\n\ninterface OwnProps {\n  service?: Service;\n}\n\nconst emptyService = { name: '', username: '', password: '', link: '', note: '' }\n\nconst mapStateToProps = (state: DVPState, ownProps: OwnProps) => ({\n  serviceValue: ownProps.service || emptyService,\n  isFetching: state.services.isFetching,\n  isDeleting: state.services.isDeleting,\n});\n\ninterface DispatchProps {\n  editServices: typeof editServices;\n  deleteServices: typeof deleteServices;\n  addServices: typeof addServices;\n}\n\nconst mapDispatchToProps = (dispatch: Dispatch<RootAction>) =>\n  bindActionCreators({\n    editServices,\n    deleteServices,\n    addServices,\n  }, dispatch);\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Component)\nexport type ReduxProps = StateProps & DispatchProps","import React, { useEffect, useMemo, useState } from 'react';\nimport Card from './card'\nimport PulseLoader from 'react-spinners/PulseLoader'\nimport { ReduxProps } from '.'\nimport styles from './card-list.module.css'\n\nexport const CardList = (props: ReduxProps) => {\n\n  const { getServices, serviceList, isFetching } = props\n  const [filter, setFilter] = useState('');\n\n  useEffect(() => {\n    getServices()\n  }, [getServices])\n\n  const filterList = useMemo(() => {\n    return serviceList.filter((service) =>\n      service.name.toLocaleLowerCase().includes(filter.toLocaleLowerCase()),\n    );\n  }, [filter, serviceList]);\n\n  return (\n    <div className={styles.container}>\n      <div>\n        <input\n          placeholder=\"Search\"\n          className={styles.input}\n          value={filter}\n          onChange={(e) => setFilter(e.target.value)} \n          />\n        <i className=\"material-icons\">search</i>\n      </div>\n      <div className={styles.list}>\n        {isFetching \n          ? (<div className={styles.loader}><PulseLoader size={10} color={'#FFF'} loading={true} /></div>) \n          : filterList.map((service) => <Card key={service.name} service={service} />)\n        }\n      </div>\n    </div>\n  )\n}\n\nexport default CardList","import Component from './card-list'\nimport { connect } from 'react-redux'\nimport { bindActionCreators, Dispatch } from 'redux';\nimport { RootAction, DVPState } from 'redux/modules';\nimport { getServices } from 'redux/modules/services/thunks'\n\ninterface StateProps {\n  readonly serviceList: DVPState['services']['list'];\n  readonly isFetching: DVPState['services']['isFetching'];\n}\n\nconst mapStateToProps = (state: DVPState) => ({\n  serviceList: state.services.list,\n  isFetching: state.services.isFetching,\n});\n\ninterface DispatchProps {\n  getServices: typeof getServices\n}\n\nconst mapDispatchToProps = (dispatch: Dispatch<RootAction>) =>\n  bindActionCreators({\n    getServices,\n  }, dispatch);\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Component)\nexport type ReduxProps = StateProps & DispatchProps","import React, { useState } from 'react';\nimport Header from './header'\nimport CardList from './card-list'\nimport Modal from 'components/shared/modal'\nimport Card from 'components/home/card-list/card'\nimport styles from './home.module.css'\n\nexport const Home = () => {\n  const [ isAddMode, setAddMode ] = useState(false)\n\n  return (\n    <div className={styles.container}>\n      <Modal\n        open={isAddMode}\n        close={() => setAddMode(false)}\n        callback={() => setAddMode(true)}\n        title=\"Delete\"\n        detail=\"Are you sure you want to delete this item?\"\n      >\n        <Card isAdding cancelAdding={() => setAddMode(false)}/>\n      </Modal>\n      <Header />\n      <div className={styles.content}>\n        <CardList />\n      </div>\n      <button onClick={() => setAddMode(true)} className={styles.addButton}>\n        <i className=\"material-icons\">add</i>\n      </button>\n    </div>\n  )\n}\n\nexport default Home"],"sourceRoot":""}