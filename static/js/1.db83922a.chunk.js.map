{"version":3,"sources":["../node_modules/react-final-form/dist/react-final-form.es.js","../node_modules/final-form/dist/final-form.es.js"],"names":["renderComponent","props","lazyProps","name","render","children","component","rest","_objectWithoutPropertiesLoose","createElement","Object","assign","undefined","Error","useWhenValueChanges","value","callback","isEqual","a","b","previous","React__default","useRef","useEffect","current","shallowEqual","keysA","keys","keysB","length","bHasOwnProperty","prototype","hasOwnProperty","bind","idx","key","isSyntheticEvent","candidate","stopPropagation","ReactFinalFormContext","createContext","useLatest","ref","addLazyState","dest","state","forEach","defineProperty","get","enumerable","addLazyFormState","versions","version$1","all","formSubscriptionItems","reduce","result","ReactFinalForm","_ref","debug","decorators","destroyOnUnregister","alternateFormApi","form","initialValues","initialValuesEqual","keepDirtyOnReinitialize","mutators","onSubmit","_ref$subscription","subscription","validate","validateOnBlur","config","init","useConstant","f","createForm","pauseValidation","_React$useState","useState","initialState","subscribe","setState","stateRef","isValidationPaused","resumeValidation","unsubscriptions","s","concat","map","decorator","reverse","unsubscribe","setConfig","renderProps","_extends","reset","eventOrValues","handleSubmit","event","preventDefault","submit","Provider","__versions","useForm","componentName","useContext","isReactNative","window","navigator","product","all$1","fieldSubscriptionItems","defaultFormat","defaultParse","defaultIsEqual","useField","_config","afterSubmit","allowNull","data","defaultValue","_config$format","format","formatOnBlur","initialValue","multiple","_config$parse","parse","_config$subscription","type","validateFields","_value","configRef","register","silent","registerField","beforeSubmit","_configRef$current","_configRef$current$fo","getFieldState","formatted","change","getValidator","firstRender","handlers","onBlur","useCallback","blur","fieldState","onChange","target","currentValue","valueProp","nativeEvent","text","_detypedEvent$target","checked","Array","isArray","index","indexOf","slice","options","option","selected","push","getSelectedValues","getValue","onFocus","focus","meta","addLazyFieldMetaState","input","Field","field","keysCache","keysRegex","toPath","split","filter","Boolean","getIn","complexKey","path","i","isNaN","_toPropertyKey","arg","hint","prim","Symbol","toPrimitive","res","call","TypeError","String","Number","_toPrimitive","setIn","destroyArrays","setInRecursor","_extends2","_result2","_result","numKeys","numericKey","_result3","_array","array","splice","FORM_ERROR","ARRAY_ERROR","publishFieldState","formState","errors","lastSubmittedValues","submitErrors","submitFailed","submitSucceeded","submitting","values","active","modified","touched","validating","visited","error","submitError","initial","pristine","valid","dirty","dirtySinceLastSubmit","invalid","subscriptionFilter","src","shallowEqualKeys","different","filterFieldState","previousState","force","shallowEqualKeys$1","filterFormState","memoize","fn","lastArgs","lastResult","_len","arguments","args","_key","some","apply","isPromise","obj","then","version","tripleEquals","hasAnyError","notifySubscriber","subscriber","lastState","notification","notify","_ref2","entries","entry","notified","subscribers","fieldSubscribers","fields","lastFormState","inBatch","validationPaused","validationBlocked","nextAsyncValidationKey","asyncValidationPromises","changeValue","mutate","after","renameField","from","to","_extends3","api","lastFieldState","getMutatorApi","mutatableState","returnValue","resetFieldState","runValidation","notifyFieldListeners","notifyFormListeners","mutatorsApi","getValidators","validators","validator","fieldChanged","safeFields","fieldKeys","limitedFieldLevelValidation","changedField","recordLevelErrors","fieldLevelErrors","promises","setErrors","errorsOrPromise","runRecordLevelValidation","setError","errorOrPromise","promise","runFieldLevelValidation","hasAsyncValidations","asyncValidationPromiseKey","Promise","processErrors","merged","forEachError","recordLevelError","errorFromParent","hasFieldLevelValidation","fieldLevelError","existing","copy","afterPromise","notifyField","fieldSubscriber","markAllFieldsTouched","calculateNextFormState","safeFieldKeys","foundDirty","dirtyFields","dirtyFieldsSinceLastSubmit","nonNullLastSubmittedValues","nextFormState","hasSubmitErrors","hasValidationErrors","convertToExternalFormState","_safeFieldKeys$reduce","notifying","scheduleNotification","batch","getRegisteredFields","getState","initialize","savedDirtyValues","fieldConfig","haveValidator","validatorRemoved","lastOne","asyncValidationPromisesKeys","console","resolvePromise","completeCalled","complete","resolve","memoized"],"mappings":"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","file":"static/js/1.db83922a.chunk.js","sourcesContent":["import _extends from '@babel/runtime/helpers/esm/extends';\nimport _objectWithoutPropertiesLoose from '@babel/runtime/helpers/esm/objectWithoutPropertiesLoose';\nimport React__default, { createElement, createContext, useState, useEffect, useContext, useRef, useCallback } from 'react';\nimport { formSubscriptionItems, createForm, version as version$1, fieldSubscriptionItems } from 'final-form';\n\n// shared logic between components that use either render prop,\n// children render function, or component prop\nfunction renderComponent(props, lazyProps, name) {\n  var render = props.render,\n      children = props.children,\n      component = props.component,\n      rest = _objectWithoutPropertiesLoose(props, [\"render\", \"children\", \"component\"]);\n\n  if (component) {\n    return createElement(component, Object.assign(lazyProps, rest, {\n      children: children,\n      render: render\n    }));\n  }\n\n  if (render) {\n    return render(children === undefined ? Object.assign(lazyProps, rest) : // inject children back in\n    Object.assign(lazyProps, rest, {\n      children: children\n    }));\n  }\n\n  if (typeof children !== 'function') {\n    throw new Error(\"Must specify either a render prop, a render function as children, or a component prop to \" + name);\n  }\n\n  return children(Object.assign(lazyProps, rest));\n}\n\nfunction useWhenValueChanges(value, callback, isEqual) {\n  if (isEqual === void 0) {\n    isEqual = function isEqual(a, b) {\n      return a === b;\n    };\n  }\n\n  var previous = React__default.useRef(value);\n  React__default.useEffect(function () {\n    if (!isEqual(value, previous.current)) {\n      callback();\n      previous.current = value;\n    }\n  });\n}\n\n/**\n * A simple hook to create a constant value that lives for\n * the lifetime of the component.\n *\n * Plagiarized from https://github.com/Andarist/use-constant\n *\n * Do NOT reuse this code unless you know what you're doing.\n * Use Andarist's hook; it's more fault tolerant to things like\n * falsy values.\n *\n * @param {Function} init - A function to generate the value\n */\n\nfunction useConstant(init) {\n  var ref = React__default.useRef();\n\n  if (!ref.current) {\n    ref.current = init();\n  }\n\n  return ref.current;\n}\n\nvar shallowEqual = function shallowEqual(a, b) {\n  if (a === b) {\n    return true;\n  }\n\n  if (typeof a !== 'object' || !a || typeof b !== 'object' || !b) {\n    return false;\n  }\n\n  var keysA = Object.keys(a);\n  var keysB = Object.keys(b);\n\n  if (keysA.length !== keysB.length) {\n    return false;\n  }\n\n  var bHasOwnProperty = Object.prototype.hasOwnProperty.bind(b);\n\n  for (var idx = 0; idx < keysA.length; idx++) {\n    var key = keysA[idx];\n\n    if (!bHasOwnProperty(key) || a[key] !== b[key]) {\n      return false;\n    }\n  }\n\n  return true;\n};\n\nvar isSyntheticEvent = function isSyntheticEvent(candidate) {\n  return !!(candidate && typeof candidate.stopPropagation === 'function');\n};\n\nvar ReactFinalFormContext = createContext();\n\nfunction useLatest(value) {\n  var ref = React__default.useRef(value);\n  React__default.useEffect(function () {\n    ref.current = value;\n  });\n  return ref;\n}\n\nvar version = \"6.4.0\";\n\nvar addLazyState = function addLazyState(dest, state, keys) {\n  keys.forEach(function (key) {\n    Object.defineProperty(dest, key, {\n      get: function get() {\n        return state[key];\n      },\n      enumerable: true\n    });\n  });\n};\n\nvar addLazyFormState = function addLazyFormState(dest, state) {\n  return addLazyState(dest, state, ['active', 'dirty', 'dirtyFields', 'dirtySinceLastSubmit', 'dirtyFieldsSinceLastSubmit', 'error', 'errors', 'hasSubmitErrors', 'hasValidationErrors', 'initialValues', 'invalid', 'modified', 'pristine', 'submitError', 'submitErrors', 'submitFailed', 'submitSucceeded', 'submitting', 'touched', 'valid', 'validating', 'values', 'visited']);\n};\nvar addLazyFieldMetaState = function addLazyFieldMetaState(dest, state) {\n  return addLazyState(dest, state, ['active', 'data', 'dirty', 'dirtySinceLastSubmit', 'error', 'initial', 'invalid', 'length', 'modified', 'pristine', 'submitError', 'submitFailed', 'submitSucceeded', 'submitting', 'touched', 'valid', 'validating', 'visited']);\n};\n\nvar versions = {\n  'final-form': version$1,\n  'react-final-form': version\n};\nvar all = formSubscriptionItems.reduce(function (result, key) {\n  result[key] = true;\n  return result;\n}, {});\n\nfunction ReactFinalForm(_ref) {\n  var debug = _ref.debug,\n      decorators = _ref.decorators,\n      destroyOnUnregister = _ref.destroyOnUnregister,\n      alternateFormApi = _ref.form,\n      initialValues = _ref.initialValues,\n      initialValuesEqual = _ref.initialValuesEqual,\n      keepDirtyOnReinitialize = _ref.keepDirtyOnReinitialize,\n      mutators = _ref.mutators,\n      onSubmit = _ref.onSubmit,\n      _ref$subscription = _ref.subscription,\n      subscription = _ref$subscription === void 0 ? all : _ref$subscription,\n      validate = _ref.validate,\n      validateOnBlur = _ref.validateOnBlur,\n      rest = _objectWithoutPropertiesLoose(_ref, [\"debug\", \"decorators\", \"destroyOnUnregister\", \"form\", \"initialValues\", \"initialValuesEqual\", \"keepDirtyOnReinitialize\", \"mutators\", \"onSubmit\", \"subscription\", \"validate\", \"validateOnBlur\"]);\n\n  var config = {\n    debug: debug,\n    destroyOnUnregister: destroyOnUnregister,\n    initialValues: initialValues,\n    keepDirtyOnReinitialize: keepDirtyOnReinitialize,\n    mutators: mutators,\n    onSubmit: onSubmit,\n    validate: validate,\n    validateOnBlur: validateOnBlur\n  };\n  var form = useConstant(function () {\n    var f = alternateFormApi || createForm(config); // pause validation until children register all fields on first render (unpaused in useEffect() below)\n\n    f.pauseValidation();\n    return f;\n  }); // synchronously register and unregister to query form state for our subscription on first render\n\n  var _React$useState = useState(function () {\n    var initialState = {};\n    form.subscribe(function (state) {\n      initialState = state;\n    }, subscription)();\n    return initialState;\n  }),\n      state = _React$useState[0],\n      setState = _React$useState[1]; // save a copy of state that can break through the closure\n  // on the shallowEqual() line below.\n\n\n  var stateRef = useLatest(state);\n  useEffect(function () {\n    // We have rendered, so all fields are now registered, so we can unpause validation\n    form.isValidationPaused() && form.resumeValidation();\n    var unsubscriptions = [form.subscribe(function (s) {\n      if (!shallowEqual(s, stateRef.current)) {\n        setState(s);\n      }\n    }, subscription)].concat(decorators ? decorators.map(function (decorator) {\n      return (// this noop ternary is to appease the flow gods\n        // istanbul ignore next\n        decorator(form)\n      );\n    }) : []);\n    return function () {\n      form.pauseValidation(); // pause validation so we don't revalidate on every field deregistration\n\n      unsubscriptions.reverse().forEach(function (unsubscribe) {\n        return unsubscribe();\n      }); // don't need to resume validation here; either unmounting, or will re-run this hook with new deps\n    }; // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [decorators]); // warn about decorator changes\n  // istanbul ignore next\n\n  if (process.env.NODE_ENV !== 'production') {\n    // You're never supposed to use hooks inside a conditional, but in this\n    // case we can be certain that you're not going to be changing your\n    // NODE_ENV between renders, so this is safe.\n    // eslint-disable-next-line react-hooks/rules-of-hooks\n    useWhenValueChanges(decorators, function () {\n      console.error('Form decorators should not change from one render to the next as new values will be ignored');\n    }, shallowEqual);\n  } // allow updatable config\n\n\n  useWhenValueChanges(debug, function () {\n    form.setConfig('debug', debug);\n  });\n  useWhenValueChanges(destroyOnUnregister, function () {\n    form.destroyOnUnregister = !!destroyOnUnregister;\n  });\n  useWhenValueChanges(keepDirtyOnReinitialize, function () {\n    form.setConfig('keepDirtyOnReinitialize', keepDirtyOnReinitialize);\n  });\n  useWhenValueChanges(initialValues, function () {\n    form.setConfig('initialValues', initialValues);\n  }, initialValuesEqual || shallowEqual);\n  useWhenValueChanges(mutators, function () {\n    form.setConfig('mutators', mutators);\n  });\n  useWhenValueChanges(onSubmit, function () {\n    form.setConfig('onSubmit', onSubmit);\n  });\n  useWhenValueChanges(validate, function () {\n    form.setConfig('validate', validate);\n  });\n  useWhenValueChanges(validateOnBlur, function () {\n    form.setConfig('validateOnBlur', validateOnBlur);\n  });\n\n  var handleSubmit = function handleSubmit(event) {\n    if (event) {\n      // sometimes not true, e.g. React Native\n      if (typeof event.preventDefault === 'function') {\n        event.preventDefault();\n      }\n\n      if (typeof event.stopPropagation === 'function') {\n        // prevent any outer forms from receiving the event too\n        event.stopPropagation();\n      }\n    }\n\n    return form.submit();\n  };\n\n  var renderProps = {\n    form: _extends({}, form, {\n      reset: function reset(eventOrValues) {\n        if (isSyntheticEvent(eventOrValues)) {\n          // it's a React SyntheticEvent, call reset with no arguments\n          form.reset();\n        } else {\n          form.reset(eventOrValues);\n        }\n      }\n    }),\n    handleSubmit: handleSubmit\n  };\n  addLazyFormState(renderProps, state);\n  return createElement(ReactFinalFormContext.Provider, {\n    value: form\n  }, renderComponent(_extends({}, rest, {\n    __versions: versions\n  }), renderProps, 'ReactFinalForm'));\n}\n\nfunction useForm(componentName) {\n  var form = useContext(ReactFinalFormContext);\n\n  if (!form) {\n    throw new Error((componentName || 'useForm') + \" must be used inside of a <Form> component\");\n  }\n\n  return form;\n}\n\nfunction useFormState(_temp) {\n  var _ref = _temp === void 0 ? {} : _temp,\n      onChange = _ref.onChange,\n      _ref$subscription = _ref.subscription,\n      subscription = _ref$subscription === void 0 ? all : _ref$subscription;\n\n  var form = useForm('useFormState');\n  var firstRender = useRef(true);\n  var onChangeRef = useRef(onChange);\n  onChangeRef.current = onChange; // synchronously register and unregister to query field state for our subscription on first render\n\n  var _React$useState = useState(function () {\n    var initialState = {};\n    form.subscribe(function (state) {\n      initialState = state;\n    }, subscription)();\n\n    if (onChange) {\n      onChange(initialState);\n    }\n\n    return initialState;\n  }),\n      state = _React$useState[0],\n      setState = _React$useState[1];\n\n  useEffect(function () {\n    return form.subscribe(function (newState) {\n      if (firstRender.current) {\n        firstRender.current = false;\n      } else {\n        setState(newState);\n\n        if (onChangeRef.current) {\n          onChangeRef.current(newState);\n        }\n      }\n    }, subscription);\n  }, // eslint-disable-next-line react-hooks/exhaustive-deps\n  []);\n  var lazyState = {};\n  addLazyFormState(lazyState, state);\n  return lazyState;\n}\n\nfunction FormSpy(_ref) {\n  var onChange = _ref.onChange,\n      subscription = _ref.subscription,\n      rest = _objectWithoutPropertiesLoose(_ref, [\"onChange\", \"subscription\"]);\n\n  var reactFinalForm = useForm('FormSpy');\n  var state = useFormState({\n    onChange: onChange,\n    subscription: subscription\n  });\n\n  if (onChange) {\n    return null;\n  }\n\n  var renderProps = {\n    form: _extends({}, reactFinalForm, {\n      reset: function reset(eventOrValues) {\n        if (isSyntheticEvent(eventOrValues)) {\n          // it's a React SyntheticEvent, call reset with no arguments\n          reactFinalForm.reset();\n        } else {\n          reactFinalForm.reset(eventOrValues);\n        }\n      }\n    })\n  };\n  return renderComponent(_extends({}, rest, {}, renderProps), state, 'FormSpy');\n}\n\nvar isReactNative = typeof window !== 'undefined' && window.navigator && window.navigator.product && window.navigator.product === 'ReactNative';\n\nvar getSelectedValues = function getSelectedValues(options) {\n  var result = [];\n\n  if (options) {\n    for (var index = 0; index < options.length; index++) {\n      var option = options[index];\n\n      if (option.selected) {\n        result.push(option.value);\n      }\n    }\n  }\n\n  return result;\n};\n\nvar getValue = function getValue(event, currentValue, valueProp, isReactNative) {\n  if (!isReactNative && event.nativeEvent && event.nativeEvent.text !== undefined) {\n    return event.nativeEvent.text;\n  }\n\n  if (isReactNative && event.nativeEvent) {\n    return event.nativeEvent.text;\n  }\n\n  var detypedEvent = event;\n  var _detypedEvent$target = detypedEvent.target,\n      type = _detypedEvent$target.type,\n      value = _detypedEvent$target.value,\n      checked = _detypedEvent$target.checked;\n\n  switch (type) {\n    case 'checkbox':\n      if (valueProp !== undefined) {\n        // we are maintaining an array, not just a boolean\n        if (checked) {\n          // add value to current array value\n          return Array.isArray(currentValue) ? currentValue.concat(valueProp) : [valueProp];\n        } else {\n          // remove value from current array value\n          if (!Array.isArray(currentValue)) {\n            return currentValue;\n          }\n\n          var index = currentValue.indexOf(valueProp);\n\n          if (index < 0) {\n            return currentValue;\n          } else {\n            return currentValue.slice(0, index).concat(currentValue.slice(index + 1));\n          }\n        }\n      } else {\n        // it's just a boolean\n        return !!checked;\n      }\n\n    case 'select-multiple':\n      return getSelectedValues(event.target.options);\n\n    default:\n      return value;\n  }\n};\n\nvar all$1 = fieldSubscriptionItems.reduce(function (result, key) {\n  result[key] = true;\n  return result;\n}, {});\n\nvar defaultFormat = function defaultFormat(value, name) {\n  return value === undefined ? '' : value;\n};\n\nvar defaultParse = function defaultParse(value, name) {\n  return value === '' ? undefined : value;\n};\n\nvar defaultIsEqual = function defaultIsEqual(a, b) {\n  return a === b;\n};\n\nfunction useField(name, config) {\n  if (config === void 0) {\n    config = {};\n  }\n\n  var _config = config,\n      afterSubmit = _config.afterSubmit,\n      allowNull = _config.allowNull,\n      component = _config.component,\n      data = _config.data,\n      defaultValue = _config.defaultValue,\n      _config$format = _config.format,\n      format = _config$format === void 0 ? defaultFormat : _config$format,\n      formatOnBlur = _config.formatOnBlur,\n      initialValue = _config.initialValue,\n      multiple = _config.multiple,\n      _config$parse = _config.parse,\n      parse = _config$parse === void 0 ? defaultParse : _config$parse,\n      _config$subscription = _config.subscription,\n      subscription = _config$subscription === void 0 ? all$1 : _config$subscription,\n      type = _config.type,\n      validateFields = _config.validateFields,\n      _value = _config.value;\n  var form = useForm('useField');\n  var configRef = useLatest(config);\n\n  var register = function register(callback, silent) {\n    return (// avoid using `state` const in any closures created inside `register`\n      // because they would refer `state` from current execution context\n      // whereas actual `state` would defined in the subsequent `useField` hook\n      // execution\n      // (that would be caused by `setState` call performed in `register` callback)\n      form.registerField(name, callback, subscription, {\n        afterSubmit: afterSubmit,\n        beforeSubmit: function beforeSubmit() {\n          var _configRef$current = configRef.current,\n              beforeSubmit = _configRef$current.beforeSubmit,\n              formatOnBlur = _configRef$current.formatOnBlur,\n              _configRef$current$fo = _configRef$current.format,\n              format = _configRef$current$fo === void 0 ? defaultFormat : _configRef$current$fo;\n\n          if (formatOnBlur) {\n            var _ref = form.getFieldState(name),\n                value = _ref.value;\n\n            var formatted = format(value, name);\n\n            if (formatted !== value) {\n              form.change(name, formatted);\n            }\n          }\n\n          return beforeSubmit && beforeSubmit();\n        },\n        data: data,\n        defaultValue: defaultValue,\n        getValidator: function getValidator() {\n          return configRef.current.validate;\n        },\n        initialValue: initialValue,\n        isEqual: function isEqual(a, b) {\n          return (configRef.current.isEqual || defaultIsEqual)(a, b);\n        },\n        silent: silent,\n        validateFields: validateFields\n      })\n    );\n  };\n\n  var firstRender = useRef(true); // synchronously register and unregister to query field state for our subscription on first render\n\n  var _React$useState = useState(function () {\n    var initialState = {}; // temporarily disable destroyOnUnregister\n\n    var destroyOnUnregister = form.destroyOnUnregister;\n    form.destroyOnUnregister = false;\n    register(function (state) {\n      initialState = state;\n    }, true)(); // return destroyOnUnregister to its original value\n\n    form.destroyOnUnregister = destroyOnUnregister;\n    return initialState;\n  }),\n      state = _React$useState[0],\n      setState = _React$useState[1];\n\n  useEffect(function () {\n    return register(function (state) {\n      if (firstRender.current) {\n        firstRender.current = false;\n      } else {\n        setState(state);\n      }\n    }, false);\n  }, // eslint-disable-next-line react-hooks/exhaustive-deps\n  [name, data, defaultValue, // If we want to allow inline fat-arrow field-level validation functions, we\n  // cannot reregister field every time validate function !==.\n  // validate,\n  initialValue // The validateFields array is often passed as validateFields={[]}, creating\n  // a !== new array every time. If it needs to be changed, a rerender/reregister\n  // can be forced by changing the key prop\n  // validateFields\n  ]);\n  var handlers = {\n    onBlur: useCallback(function (event) {\n      state.blur();\n\n      if (formatOnBlur) {\n        /**\n         * Here we must fetch the value directly from Final Form because we cannot\n         * trust that our `state` closure has the most recent value. This is a problem\n         * if-and-only-if the library consumer has called `onChange()` immediately\n         * before calling `onBlur()`, but before the field has had a chance to receive\n         * the value update from Final Form.\n         */\n        var fieldState = form.getFieldState(state.name);\n        state.change(format(fieldState.value, state.name));\n      }\n    }, // eslint-disable-next-line react-hooks/exhaustive-deps\n    [state.name, format, formatOnBlur]),\n    onChange: useCallback(function (event) {\n      // istanbul ignore next\n      if (process.env.NODE_ENV !== 'production' && event && event.target) {\n        var targetType = event.target.type;\n        var unknown = ~['checkbox', 'radio', 'select-multiple'].indexOf(targetType) && !type;\n\n        var _value2 = targetType === 'select-multiple' ? state.value : _value;\n\n        if (unknown) {\n          console.error(\"You must pass `type=\\\"\" + (targetType === 'select-multiple' ? 'select' : targetType) + \"\\\"` prop to your Field(\" + name + \") component.\\n\" + (\"Without it we don't know how to unpack your `value` prop - \" + (Array.isArray(_value2) ? \"[\" + _value2 + \"]\" : \"\\\"\" + _value2 + \"\\\"\") + \".\"));\n        }\n      }\n\n      var value = event && event.target ? getValue(event, state.value, _value, isReactNative) : event;\n      state.change(parse(value, name));\n    }, // eslint-disable-next-line react-hooks/exhaustive-deps\n    [_value, name, parse, state.change, state.value, type]),\n    onFocus: useCallback(function (event) {\n      state.focus(); // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [])\n  };\n  var meta = {};\n  addLazyFieldMetaState(meta, state);\n\n  var input = _extends({\n    name: name,\n\n    get value() {\n      var value = state.value;\n\n      if (formatOnBlur) {\n        if (component === 'input') {\n          value = defaultFormat(value);\n        }\n      } else {\n        value = format(value, name);\n      }\n\n      if (value === null && !allowNull) {\n        value = '';\n      }\n\n      if (type === 'checkbox' || type === 'radio') {\n        return _value;\n      } else if (component === 'select' && multiple) {\n        return value || [];\n      }\n\n      return value;\n    },\n\n    get checked() {\n      if (type === 'checkbox') {\n        if (_value === undefined) {\n          return !!state.value;\n        } else {\n          return !!(Array.isArray(state.value) && ~state.value.indexOf(_value));\n        }\n      } else if (type === 'radio') {\n        return state.value === _value;\n      }\n\n      return undefined;\n    }\n\n  }, handlers);\n\n  if (multiple) {\n    input.multiple = multiple;\n  }\n\n  if (type !== undefined) {\n    input.type = type;\n  }\n\n  var renderProps = {\n    input: input,\n    meta: meta\n  }; // assign to force Flow check\n\n  return renderProps;\n}\n\nvar Field = function Field(_ref) {\n  var afterSubmit = _ref.afterSubmit,\n      allowNull = _ref.allowNull,\n      beforeSubmit = _ref.beforeSubmit,\n      children = _ref.children,\n      component = _ref.component,\n      data = _ref.data,\n      defaultValue = _ref.defaultValue,\n      format = _ref.format,\n      formatOnBlur = _ref.formatOnBlur,\n      initialValue = _ref.initialValue,\n      isEqual = _ref.isEqual,\n      multiple = _ref.multiple,\n      name = _ref.name,\n      parse = _ref.parse,\n      subscription = _ref.subscription,\n      type = _ref.type,\n      validate = _ref.validate,\n      validateFields = _ref.validateFields,\n      value = _ref.value,\n      rest = _objectWithoutPropertiesLoose(_ref, [\"afterSubmit\", \"allowNull\", \"beforeSubmit\", \"children\", \"component\", \"data\", \"defaultValue\", \"format\", \"formatOnBlur\", \"initialValue\", \"isEqual\", \"multiple\", \"name\", \"parse\", \"subscription\", \"type\", \"validate\", \"validateFields\", \"value\"]);\n\n  var field = useField(name, {\n    afterSubmit: afterSubmit,\n    allowNull: allowNull,\n    beforeSubmit: beforeSubmit,\n    children: children,\n    component: component,\n    data: data,\n    defaultValue: defaultValue,\n    format: format,\n    formatOnBlur: formatOnBlur,\n    initialValue: initialValue,\n    isEqual: isEqual,\n    multiple: multiple,\n    parse: parse,\n    subscription: subscription,\n    type: type,\n    validate: validate,\n    validateFields: validateFields,\n    value: value\n  });\n\n  if (typeof children === 'function') {\n    return children(_extends({}, field, {}, rest));\n  }\n\n  if (typeof component === 'string') {\n    // ignore meta, combine input with any other props\n    return createElement(component, _extends({}, field.input, {\n      children: children\n    }, rest));\n  }\n\n  return renderComponent(_extends({\n    children: children,\n    component: component\n  }, rest), field, \"Field(\" + name + \")\");\n};\n\nfunction withTypes() {\n  return {\n    Form: ReactFinalForm,\n    FormSpy: FormSpy\n  };\n}\n\nexport { Field, ReactFinalForm as Form, FormSpy, useField, useForm, useFormState, version, withTypes };\n","import _extends from '@babel/runtime/helpers/esm/extends';\nimport _objectWithoutPropertiesLoose from '@babel/runtime/helpers/esm/objectWithoutPropertiesLoose';\n\n//      \nvar keysCache = {};\nvar keysRegex = /[.[\\]]+/;\n\nvar toPath = function toPath(key) {\n  if (key === null || key === undefined || !key.length) {\n    return [];\n  }\n\n  if (typeof key !== 'string') {\n    throw new Error('toPath() expects a string');\n  }\n\n  if (keysCache[key] == null) {\n    keysCache[key] = key.split(keysRegex).filter(Boolean);\n  }\n\n  return keysCache[key];\n};\n\n//      \n\nvar getIn = function getIn(state, complexKey) {\n  // Intentionally using iteration rather than recursion\n  var path = toPath(complexKey);\n  var current = state;\n\n  for (var i = 0; i < path.length; i++) {\n    var key = path[i];\n\n    if (current === undefined || current === null || typeof current !== 'object' || Array.isArray(current) && isNaN(key)) {\n      return undefined;\n    }\n\n    current = current[key];\n  }\n\n  return current;\n};\n\nfunction _toPropertyKey(arg) { var key = _toPrimitive(arg, \"string\"); return typeof key === \"symbol\" ? key : String(key); }\n\nfunction _toPrimitive(input, hint) { if (typeof input !== \"object\" || input === null) return input; var prim = input[Symbol.toPrimitive]; if (prim !== undefined) { var res = prim.call(input, hint || \"default\"); if (typeof res !== \"object\") return res; throw new TypeError(\"@@toPrimitive must return a primitive value.\"); } return (hint === \"string\" ? String : Number)(input); }\n\nvar setInRecursor = function setInRecursor(current, index, path, value, destroyArrays) {\n  if (index >= path.length) {\n    // end of recursion\n    return value;\n  }\n\n  var key = path[index]; // determine type of key\n\n  if (isNaN(key)) {\n    var _extends2;\n\n    // object set\n    if (current === undefined || current === null) {\n      var _ref;\n\n      // recurse\n      var _result2 = setInRecursor(undefined, index + 1, path, value, destroyArrays); // delete or create an object\n\n\n      return _result2 === undefined ? undefined : (_ref = {}, _ref[key] = _result2, _ref);\n    }\n\n    if (Array.isArray(current)) {\n      throw new Error('Cannot set a non-numeric property on an array');\n    } // current exists, so make a copy of all its values, and add/update the new one\n\n\n    var _result = setInRecursor(current[key], index + 1, path, value, destroyArrays);\n\n    if (_result === undefined) {\n      var numKeys = Object.keys(current).length;\n\n      if (current[key] === undefined && numKeys === 0) {\n        // object was already empty\n        return undefined;\n      }\n\n      if (current[key] !== undefined && numKeys <= 1) {\n        // only key we had was the one we are deleting\n        if (!isNaN(path[index - 1]) && !destroyArrays) {\n          // we are in an array, so return an empty object\n          return {};\n        } else {\n          return undefined;\n        }\n      }\n\n      var _removed = current[key],\n          _final = _objectWithoutPropertiesLoose(current, [key].map(_toPropertyKey));\n\n      return _final;\n    } // set result in key\n\n\n    return _extends({}, current, (_extends2 = {}, _extends2[key] = _result, _extends2));\n  } // array set\n\n\n  var numericKey = Number(key);\n\n  if (current === undefined || current === null) {\n    // recurse\n    var _result3 = setInRecursor(undefined, index + 1, path, value, destroyArrays); // if nothing returned, delete it\n\n\n    if (_result3 === undefined) {\n      return undefined;\n    } // create an array\n\n\n    var _array = [];\n    _array[numericKey] = _result3;\n    return _array;\n  }\n\n  if (!Array.isArray(current)) {\n    throw new Error('Cannot set a numeric property on an object');\n  } // recurse\n\n\n  var existingValue = current[numericKey];\n  var result = setInRecursor(existingValue, index + 1, path, value, destroyArrays); // current exists, so make a copy of all its values, and add/update the new one\n\n  var array = [].concat(current);\n\n  if (destroyArrays && result === undefined) {\n    array.splice(numericKey, 1);\n\n    if (array.length === 0) {\n      return undefined;\n    }\n  } else {\n    array[numericKey] = result;\n  }\n\n  return array;\n};\n\nvar setIn = function setIn(state, key, value, destroyArrays) {\n  if (destroyArrays === void 0) {\n    destroyArrays = false;\n  }\n\n  if (state === undefined || state === null) {\n    throw new Error(\"Cannot call setIn() with \" + String(state) + \" state\");\n  }\n\n  if (key === undefined || key === null) {\n    throw new Error(\"Cannot call setIn() with \" + String(key) + \" key\");\n  } // Recursive function needs to accept and return State, but public API should\n  // only deal with Objects\n\n\n  return setInRecursor(state, 0, toPath(key), value, destroyArrays);\n};\n\nvar FORM_ERROR = 'FINAL_FORM/form-error';\nvar ARRAY_ERROR = 'FINAL_FORM/array-error';\n\n//      \n/**\n * Converts internal field state to published field state\n */\n\nfunction publishFieldState(formState, field) {\n  var errors = formState.errors,\n      initialValues = formState.initialValues,\n      lastSubmittedValues = formState.lastSubmittedValues,\n      submitErrors = formState.submitErrors,\n      submitFailed = formState.submitFailed,\n      submitSucceeded = formState.submitSucceeded,\n      submitting = formState.submitting,\n      values = formState.values;\n  var active = field.active,\n      blur = field.blur,\n      change = field.change,\n      data = field.data,\n      focus = field.focus,\n      modified = field.modified,\n      name = field.name,\n      touched = field.touched,\n      validating = field.validating,\n      visited = field.visited;\n  var value = getIn(values, name);\n  var error = getIn(errors, name);\n\n  if (error && error[ARRAY_ERROR]) {\n    error = error[ARRAY_ERROR];\n  }\n\n  var submitError = submitErrors && getIn(submitErrors, name);\n  var initial = initialValues && getIn(initialValues, name);\n  var pristine = field.isEqual(initial, value);\n  var dirtySinceLastSubmit = !!(lastSubmittedValues && !field.isEqual(getIn(lastSubmittedValues, name), value));\n  var valid = !error && !submitError;\n  return {\n    active: active,\n    blur: blur,\n    change: change,\n    data: data,\n    dirty: !pristine,\n    dirtySinceLastSubmit: dirtySinceLastSubmit,\n    error: error,\n    focus: focus,\n    initial: initial,\n    invalid: !valid,\n    length: Array.isArray(value) ? value.length : undefined,\n    modified: modified,\n    name: name,\n    pristine: pristine,\n    submitError: submitError,\n    submitFailed: submitFailed,\n    submitSucceeded: submitSucceeded,\n    submitting: submitting,\n    touched: touched,\n    valid: valid,\n    value: value,\n    visited: visited,\n    validating: validating\n  };\n}\n\n//      \nvar fieldSubscriptionItems = ['active', 'data', 'dirty', 'dirtySinceLastSubmit', 'error', 'initial', 'invalid', 'length', 'modified', 'pristine', 'submitError', 'submitFailed', 'submitSucceeded', 'submitting', 'touched', 'valid', 'value', 'visited', 'validating'];\n\n//      \nvar shallowEqual = function shallowEqual(a, b) {\n  if (a === b) {\n    return true;\n  }\n\n  if (typeof a !== 'object' || !a || typeof b !== 'object' || !b) {\n    return false;\n  }\n\n  var keysA = Object.keys(a);\n  var keysB = Object.keys(b);\n\n  if (keysA.length !== keysB.length) {\n    return false;\n  }\n\n  var bHasOwnProperty = Object.prototype.hasOwnProperty.bind(b);\n\n  for (var idx = 0; idx < keysA.length; idx++) {\n    var key = keysA[idx];\n\n    if (!bHasOwnProperty(key) || a[key] !== b[key]) {\n      return false;\n    }\n  }\n\n  return true;\n};\n\n//      \nfunction subscriptionFilter (dest, src, previous, subscription, keys, shallowEqualKeys) {\n  var different = false;\n  keys.forEach(function (key) {\n    if (subscription[key]) {\n      dest[key] = src[key];\n\n      if (!previous || (~shallowEqualKeys.indexOf(key) ? !shallowEqual(src[key], previous[key]) : src[key] !== previous[key])) {\n        different = true;\n      }\n    }\n  });\n  return different;\n}\n\n//      \nvar shallowEqualKeys = ['data'];\n/**\n * Filters items in a FieldState based on a FieldSubscription\n */\n\nvar filterFieldState = function filterFieldState(state, previousState, subscription, force) {\n  var result = {\n    blur: state.blur,\n    change: state.change,\n    focus: state.focus,\n    name: state.name\n  };\n  var different = subscriptionFilter(result, state, previousState, subscription, fieldSubscriptionItems, shallowEqualKeys) || !previousState;\n  return different || force ? result : undefined;\n};\n\n//      \nvar formSubscriptionItems = ['active', 'dirty', 'dirtyFields', 'dirtyFieldsSinceLastSubmit', 'dirtySinceLastSubmit', 'error', 'errors', 'hasSubmitErrors', 'hasValidationErrors', 'initialValues', 'invalid', 'modified', 'pristine', 'submitting', 'submitError', 'submitErrors', 'submitFailed', 'submitSucceeded', 'touched', 'valid', 'validating', 'values', 'visited'];\n\n//      \nvar shallowEqualKeys$1 = ['touched', 'visited'];\n/**\n * Filters items in a FormState based on a FormSubscription\n */\n\nfunction filterFormState(state, previousState, subscription, force) {\n  var result = {};\n  var different = subscriptionFilter(result, state, previousState, subscription, formSubscriptionItems, shallowEqualKeys$1) || !previousState;\n  return different || force ? result : undefined;\n}\n\n//      \n\nvar memoize = function memoize(fn) {\n  var lastArgs;\n  var lastResult;\n  return function () {\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    if (!lastArgs || args.length !== lastArgs.length || args.some(function (arg, index) {\n      return !shallowEqual(lastArgs[index], arg);\n    })) {\n      lastArgs = args;\n      lastResult = fn.apply(void 0, args);\n    }\n\n    return lastResult;\n  };\n};\n\nvar isPromise = (function (obj) {\n  return !!obj && (typeof obj === 'object' || typeof obj === 'function') && typeof obj.then === 'function';\n});\n\nvar version = \"4.19.1\";\n\nvar configOptions = ['debug', 'initialValues', 'keepDirtyOnReinitialize', 'mutators', 'onSubmit', 'validate', 'validateOnBlur'];\n\nvar tripleEquals = function tripleEquals(a, b) {\n  return a === b;\n};\n\nvar hasAnyError = function hasAnyError(errors) {\n  return Object.keys(errors).some(function (key) {\n    var value = errors[key];\n\n    if (value && typeof value === 'object' && !(value instanceof Error)) {\n      return hasAnyError(value);\n    }\n\n    return typeof value !== 'undefined';\n  });\n};\n\nfunction convertToExternalFormState(_ref) {\n  var active = _ref.active,\n      dirtySinceLastSubmit = _ref.dirtySinceLastSubmit,\n      error = _ref.error,\n      errors = _ref.errors,\n      initialValues = _ref.initialValues,\n      pristine = _ref.pristine,\n      submitting = _ref.submitting,\n      submitFailed = _ref.submitFailed,\n      submitSucceeded = _ref.submitSucceeded,\n      submitError = _ref.submitError,\n      submitErrors = _ref.submitErrors,\n      valid = _ref.valid,\n      validating = _ref.validating,\n      values = _ref.values;\n  return {\n    active: active,\n    dirty: !pristine,\n    dirtySinceLastSubmit: dirtySinceLastSubmit,\n    error: error,\n    errors: errors,\n    hasSubmitErrors: !!(submitError || submitErrors && hasAnyError(submitErrors)),\n    hasValidationErrors: !!(error || hasAnyError(errors)),\n    invalid: !valid,\n    initialValues: initialValues,\n    pristine: pristine,\n    submitting: submitting,\n    submitFailed: submitFailed,\n    submitSucceeded: submitSucceeded,\n    submitError: submitError,\n    submitErrors: submitErrors,\n    valid: valid,\n    validating: validating > 0,\n    values: values\n  };\n}\n\nfunction notifySubscriber(subscriber, subscription, state, lastState, filter, force) {\n  var notification = filter(state, lastState, subscription, force);\n\n  if (notification) {\n    subscriber(notification);\n    return true;\n  }\n\n  return false;\n}\n\nfunction notify(_ref2, state, lastState, filter, force) {\n  var entries = _ref2.entries;\n  Object.keys(entries).forEach(function (key) {\n    var entry = entries[Number(key)]; // istanbul ignore next\n\n    if (entry) {\n      var subscription = entry.subscription,\n          subscriber = entry.subscriber,\n          notified = entry.notified;\n\n      if (notifySubscriber(subscriber, subscription, state, lastState, filter, force || !notified)) {\n        entry.notified = true;\n      }\n    }\n  });\n}\n\nfunction createForm(config) {\n  if (!config) {\n    throw new Error('No config specified');\n  }\n\n  var debug = config.debug,\n      destroyOnUnregister = config.destroyOnUnregister,\n      keepDirtyOnReinitialize = config.keepDirtyOnReinitialize,\n      initialValues = config.initialValues,\n      mutators = config.mutators,\n      onSubmit = config.onSubmit,\n      validate = config.validate,\n      validateOnBlur = config.validateOnBlur;\n\n  if (!onSubmit) {\n    throw new Error('No onSubmit function specified');\n  }\n\n  var state = {\n    subscribers: {\n      index: 0,\n      entries: {}\n    },\n    fieldSubscribers: {},\n    fields: {},\n    formState: {\n      dirtySinceLastSubmit: false,\n      errors: {},\n      initialValues: initialValues && _extends({}, initialValues),\n      invalid: false,\n      pristine: true,\n      submitting: false,\n      submitFailed: false,\n      submitSucceeded: false,\n      valid: true,\n      validating: 0,\n      values: initialValues ? _extends({}, initialValues) : {}\n    },\n    lastFormState: undefined\n  };\n  var inBatch = 0;\n  var validationPaused = false;\n  var validationBlocked = false;\n  var nextAsyncValidationKey = 0;\n  var asyncValidationPromises = {};\n\n  var clearAsyncValidationPromise = function clearAsyncValidationPromise(key) {\n    return function (result) {\n      delete asyncValidationPromises[key];\n      return result;\n    };\n  };\n\n  var changeValue = function changeValue(state, name, mutate) {\n    var before = getIn(state.formState.values, name);\n    var after = mutate(before);\n    state.formState.values = setIn(state.formState.values, name, after) || {};\n  };\n\n  var renameField = function renameField(state, from, to) {\n    if (state.fields[from]) {\n      var _extends2, _extends3;\n\n      state.fields = _extends({}, state.fields, (_extends2 = {}, _extends2[to] = _extends({}, state.fields[from], {\n        name: to,\n        // rebind event handlers\n        blur: function blur() {\n          return api.blur(to);\n        },\n        change: function change(value) {\n          return api.change(to, value);\n        },\n        focus: function focus() {\n          return api.focus(to);\n        },\n        lastFieldState: undefined\n      }), _extends2));\n      delete state.fields[from];\n      state.fieldSubscribers = _extends({}, state.fieldSubscribers, (_extends3 = {}, _extends3[to] = state.fieldSubscribers[from], _extends3));\n      delete state.fieldSubscribers[from];\n      var value = getIn(state.formState.values, from);\n      state.formState.values = setIn(state.formState.values, from, undefined) || {};\n      state.formState.values = setIn(state.formState.values, to, value);\n      delete state.lastFormState;\n    }\n  }; // bind state to mutators\n\n\n  var getMutatorApi = function getMutatorApi(key) {\n    return function () {\n      // istanbul ignore next\n      if (mutators) {\n        // ^^ causes branch coverage warning, but needed to appease the Flow gods\n        var mutatableState = {\n          formState: state.formState,\n          fields: state.fields,\n          fieldSubscribers: state.fieldSubscribers,\n          lastFormState: state.lastFormState\n        };\n\n        for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n          args[_key] = arguments[_key];\n        }\n\n        var returnValue = mutators[key](args, mutatableState, {\n          changeValue: changeValue,\n          getIn: getIn,\n          renameField: renameField,\n          resetFieldState: api.resetFieldState,\n          setIn: setIn,\n          shallowEqual: shallowEqual\n        });\n        state.formState = mutatableState.formState;\n        state.fields = mutatableState.fields;\n        state.fieldSubscribers = mutatableState.fieldSubscribers;\n        state.lastFormState = mutatableState.lastFormState;\n        runValidation(undefined, function () {\n          notifyFieldListeners();\n          notifyFormListeners();\n        });\n        return returnValue;\n      }\n    };\n  };\n\n  var mutatorsApi = mutators ? Object.keys(mutators).reduce(function (result, key) {\n    result[key] = getMutatorApi(key);\n    return result;\n  }, {}) : {};\n\n  var runRecordLevelValidation = function runRecordLevelValidation(setErrors) {\n    var promises = [];\n\n    if (validate) {\n      var errorsOrPromise = validate(_extends({}, state.formState.values)); // clone to avoid writing\n\n      if (isPromise(errorsOrPromise)) {\n        promises.push(errorsOrPromise.then(setErrors));\n      } else {\n        setErrors(errorsOrPromise);\n      }\n    }\n\n    return promises;\n  };\n\n  var getValidators = function getValidators(field) {\n    return Object.keys(field.validators).reduce(function (result, index) {\n      var validator = field.validators[Number(index)]();\n\n      if (validator) {\n        result.push(validator);\n      }\n\n      return result;\n    }, []);\n  };\n\n  var runFieldLevelValidation = function runFieldLevelValidation(field, setError) {\n    var promises = [];\n    var validators = getValidators(field);\n\n    if (validators.length) {\n      var error;\n      validators.forEach(function (validator) {\n        var errorOrPromise = validator(getIn(state.formState.values, field.name), state.formState.values, validator.length === 3 ? publishFieldState(state.formState, state.fields[field.name]) : undefined);\n\n        if (errorOrPromise && isPromise(errorOrPromise)) {\n          field.validating = true;\n          var promise = errorOrPromise.then(function (error) {\n            field.validating = false;\n            setError(error);\n          }); // errors must be resolved, not rejected\n\n          promises.push(promise);\n        } else if (!error) {\n          // first registered validator wins\n          error = errorOrPromise;\n        }\n      });\n      setError(error);\n    }\n\n    return promises;\n  };\n\n  var runValidation = function runValidation(fieldChanged, callback) {\n    if (validationPaused) {\n      validationBlocked = true;\n      callback();\n      return;\n    }\n\n    var fields = state.fields,\n        formState = state.formState;\n\n    var safeFields = _extends({}, fields);\n\n    var fieldKeys = Object.keys(safeFields);\n\n    if (!validate && !fieldKeys.some(function (key) {\n      return getValidators(safeFields[key]).length;\n    })) {\n      callback();\n      return; // no validation rules\n    } // pare down field keys to actually validate\n\n\n    var limitedFieldLevelValidation = false;\n\n    if (fieldChanged) {\n      var changedField = safeFields[fieldChanged];\n\n      if (changedField) {\n        var validateFields = changedField.validateFields;\n\n        if (validateFields) {\n          limitedFieldLevelValidation = true;\n          fieldKeys = validateFields.length ? validateFields.concat(fieldChanged) : [fieldChanged];\n        }\n      }\n    }\n\n    var recordLevelErrors = {};\n    var fieldLevelErrors = {};\n    var promises = [].concat(runRecordLevelValidation(function (errors) {\n      recordLevelErrors = errors || {};\n    }), fieldKeys.reduce(function (result, name) {\n      return result.concat(runFieldLevelValidation(fields[name], function (error) {\n        fieldLevelErrors[name] = error;\n      }));\n    }, []));\n    var hasAsyncValidations = promises.length > 0;\n    var asyncValidationPromiseKey = ++nextAsyncValidationKey;\n    var promise = Promise.all(promises).then(clearAsyncValidationPromise(asyncValidationPromiseKey)); // backwards-compat: add promise to submit-blocking promises iff there are any promises to await\n\n    if (hasAsyncValidations) {\n      asyncValidationPromises[asyncValidationPromiseKey] = promise;\n    }\n\n    var processErrors = function processErrors() {\n      var merged = _extends({}, limitedFieldLevelValidation ? formState.errors : {}, {}, recordLevelErrors);\n\n      var forEachError = function forEachError(fn) {\n        fieldKeys.forEach(function (name) {\n          if (fields[name]) {\n            // make sure field is still registered\n            // field-level errors take precedent over record-level errors\n            var recordLevelError = getIn(recordLevelErrors, name);\n            var errorFromParent = getIn(merged, name);\n            var hasFieldLevelValidation = getValidators(safeFields[name]).length;\n            var fieldLevelError = fieldLevelErrors[name];\n            fn(name, hasFieldLevelValidation && fieldLevelError || validate && recordLevelError || (!recordLevelError && !limitedFieldLevelValidation ? errorFromParent : undefined));\n          }\n        });\n      };\n\n      forEachError(function (name, error) {\n        merged = setIn(merged, name, error) || {};\n      });\n      forEachError(function (name, error) {\n        if (error && error[ARRAY_ERROR]) {\n          var existing = getIn(merged, name);\n          var copy = [].concat(existing);\n          copy[ARRAY_ERROR] = error[ARRAY_ERROR];\n          merged = setIn(merged, name, copy);\n        }\n      });\n\n      if (!shallowEqual(formState.errors, merged)) {\n        formState.errors = merged;\n      }\n\n      formState.error = recordLevelErrors[FORM_ERROR];\n    }; // process sync errors\n\n\n    processErrors(); // sync errors have been set. notify listeners while we wait for others\n\n    callback();\n\n    if (hasAsyncValidations) {\n      state.formState.validating++;\n      callback();\n\n      var afterPromise = function afterPromise() {\n        state.formState.validating--;\n        callback();\n      };\n\n      promise.then(function () {\n        if (nextAsyncValidationKey > asyncValidationPromiseKey) {\n          // if this async validator has been superseded by another, ignore its results\n          return;\n        }\n\n        processErrors();\n      }).then(afterPromise, afterPromise);\n    }\n  };\n\n  var notifyFieldListeners = function notifyFieldListeners(name) {\n    if (inBatch) {\n      return;\n    }\n\n    var fields = state.fields,\n        fieldSubscribers = state.fieldSubscribers,\n        formState = state.formState;\n\n    var safeFields = _extends({}, fields);\n\n    var notifyField = function notifyField(name) {\n      var field = safeFields[name];\n      var fieldState = publishFieldState(formState, field);\n      var lastFieldState = field.lastFieldState;\n      field.lastFieldState = fieldState;\n      var fieldSubscriber = fieldSubscribers[name];\n\n      if (fieldSubscriber) {\n        notify(fieldSubscriber, fieldState, lastFieldState, filterFieldState, lastFieldState === undefined);\n      }\n    };\n\n    if (name) {\n      notifyField(name);\n    } else {\n      Object.keys(safeFields).forEach(notifyField);\n    }\n  };\n\n  var markAllFieldsTouched = function markAllFieldsTouched() {\n    Object.keys(state.fields).forEach(function (key) {\n      state.fields[key].touched = true;\n    });\n  };\n\n  var hasSyncErrors = function hasSyncErrors() {\n    return !!(state.formState.error || hasAnyError(state.formState.errors));\n  };\n\n  var calculateNextFormState = function calculateNextFormState() {\n    var fields = state.fields,\n        formState = state.formState,\n        lastFormState = state.lastFormState;\n\n    var safeFields = _extends({}, fields);\n\n    var safeFieldKeys = Object.keys(safeFields); // calculate dirty/pristine\n\n    var foundDirty = false;\n    var dirtyFields = safeFieldKeys.reduce(function (result, key) {\n      var dirty = !safeFields[key].isEqual(getIn(formState.values, key), getIn(formState.initialValues || {}, key));\n\n      if (dirty) {\n        foundDirty = true;\n        result[key] = true;\n      }\n\n      return result;\n    }, {});\n    var dirtyFieldsSinceLastSubmit = safeFieldKeys.reduce(function (result, key) {\n      // istanbul ignore next\n      var nonNullLastSubmittedValues = formState.lastSubmittedValues || {}; // || {} is for flow, but causes branch coverage complaint\n\n      if (!safeFields[key].isEqual(getIn(formState.values, key), getIn(nonNullLastSubmittedValues, key))) {\n        result[key] = true;\n      }\n\n      return result;\n    }, {});\n    formState.pristine = !foundDirty;\n    formState.dirtySinceLastSubmit = !!(formState.lastSubmittedValues && Object.values(dirtyFieldsSinceLastSubmit).some(function (value) {\n      return value;\n    }));\n    formState.valid = !formState.error && !formState.submitError && !hasAnyError(formState.errors) && !(formState.submitErrors && hasAnyError(formState.submitErrors));\n    var nextFormState = convertToExternalFormState(formState);\n\n    var _safeFieldKeys$reduce = safeFieldKeys.reduce(function (result, key) {\n      result.modified[key] = safeFields[key].modified;\n      result.touched[key] = safeFields[key].touched;\n      result.visited[key] = safeFields[key].visited;\n      return result;\n    }, {\n      modified: {},\n      touched: {},\n      visited: {}\n    }),\n        modified = _safeFieldKeys$reduce.modified,\n        touched = _safeFieldKeys$reduce.touched,\n        visited = _safeFieldKeys$reduce.visited;\n\n    nextFormState.dirtyFields = lastFormState && shallowEqual(lastFormState.dirtyFields, dirtyFields) ? lastFormState.dirtyFields : dirtyFields;\n    nextFormState.dirtyFieldsSinceLastSubmit = lastFormState && shallowEqual(lastFormState.dirtyFieldsSinceLastSubmit, dirtyFieldsSinceLastSubmit) ? lastFormState.dirtyFieldsSinceLastSubmit : dirtyFieldsSinceLastSubmit;\n    nextFormState.modified = lastFormState && shallowEqual(lastFormState.modified, modified) ? lastFormState.modified : modified;\n    nextFormState.touched = lastFormState && shallowEqual(lastFormState.touched, touched) ? lastFormState.touched : touched;\n    nextFormState.visited = lastFormState && shallowEqual(lastFormState.visited, visited) ? lastFormState.visited : visited;\n    return lastFormState && shallowEqual(lastFormState, nextFormState) ? lastFormState : nextFormState;\n  };\n\n  var callDebug = function callDebug() {\n    return debug && \"development\" !== 'production' && debug(calculateNextFormState(), Object.keys(state.fields).reduce(function (result, key) {\n      result[key] = state.fields[key];\n      return result;\n    }, {}));\n  };\n\n  var notifying = false;\n  var scheduleNotification = false;\n\n  var notifyFormListeners = function notifyFormListeners() {\n    if (notifying) {\n      scheduleNotification = true;\n    } else {\n      notifying = true;\n      callDebug();\n\n      if (!inBatch && !validationPaused) {\n        var lastFormState = state.lastFormState;\n        var nextFormState = calculateNextFormState();\n\n        if (nextFormState !== lastFormState) {\n          state.lastFormState = nextFormState;\n          notify(state.subscribers, nextFormState, lastFormState, filterFormState);\n        }\n      }\n\n      notifying = false;\n\n      if (scheduleNotification) {\n        scheduleNotification = false;\n        notifyFormListeners();\n      }\n    }\n  };\n\n  var beforeSubmit = function beforeSubmit() {\n    return Object.keys(state.fields).some(function (name) {\n      return state.fields[name].beforeSubmit && state.fields[name].beforeSubmit() === false;\n    });\n  };\n\n  var afterSubmit = function afterSubmit() {\n    return Object.keys(state.fields).forEach(function (name) {\n      return state.fields[name].afterSubmit && state.fields[name].afterSubmit();\n    });\n  }; // generate initial errors\n\n\n  runValidation(undefined, function () {\n    notifyFormListeners();\n  });\n  var api = {\n    batch: function batch(fn) {\n      inBatch++;\n      fn();\n      inBatch--;\n      notifyFieldListeners();\n      notifyFormListeners();\n    },\n    blur: function blur(name) {\n      var fields = state.fields,\n          formState = state.formState;\n      var previous = fields[name];\n\n      if (previous) {\n        // can only blur registered fields\n        delete formState.active;\n        fields[name] = _extends({}, previous, {\n          active: false,\n          touched: true\n        });\n\n        if (validateOnBlur) {\n          runValidation(name, function () {\n            notifyFieldListeners();\n            notifyFormListeners();\n          });\n        } else {\n          notifyFieldListeners();\n          notifyFormListeners();\n        }\n      }\n    },\n    change: function change(name, value) {\n      var fields = state.fields,\n          formState = state.formState;\n\n      if (getIn(formState.values, name) !== value) {\n        changeValue(state, name, function () {\n          return value;\n        });\n        var previous = fields[name];\n\n        if (previous) {\n          // only track modified for registered fields\n          fields[name] = _extends({}, previous, {\n            modified: true\n          });\n        }\n\n        if (validateOnBlur) {\n          notifyFieldListeners();\n          notifyFormListeners();\n        } else {\n          runValidation(name, function () {\n            notifyFieldListeners();\n            notifyFormListeners();\n          });\n        }\n      }\n    },\n\n    get destroyOnUnregister() {\n      return !!destroyOnUnregister;\n    },\n\n    set destroyOnUnregister(value) {\n      destroyOnUnregister = value;\n    },\n\n    focus: function focus(name) {\n      var field = state.fields[name];\n\n      if (field && !field.active) {\n        state.formState.active = name;\n        field.active = true;\n        field.visited = true;\n        notifyFieldListeners();\n        notifyFormListeners();\n      }\n    },\n    mutators: mutatorsApi,\n    getFieldState: function getFieldState(name) {\n      var field = state.fields[name];\n      return field && field.lastFieldState;\n    },\n    getRegisteredFields: function getRegisteredFields() {\n      return Object.keys(state.fields);\n    },\n    getState: function getState() {\n      return calculateNextFormState();\n    },\n    initialize: function initialize(data) {\n      var fields = state.fields,\n          formState = state.formState;\n\n      var safeFields = _extends({}, fields);\n\n      var values = typeof data === 'function' ? data(formState.values) : data;\n\n      if (!keepDirtyOnReinitialize) {\n        formState.values = values;\n      }\n      /**\n       * Hello, inquisitive code reader! Thanks for taking the time to dig in!\n       *\n       * The following code is the way it is to allow for non-registered deep\n       * field values to be set via initialize()\n       */\n      // save dirty values\n\n\n      var savedDirtyValues = keepDirtyOnReinitialize ? Object.keys(safeFields).reduce(function (result, key) {\n        var field = safeFields[key];\n        var pristine = field.isEqual(getIn(formState.values, key), getIn(formState.initialValues || {}, key));\n\n        if (!pristine) {\n          result[key] = getIn(formState.values, key);\n        }\n\n        return result;\n      }, {}) : {}; // update initalValues and values\n\n      formState.initialValues = values;\n      formState.values = values; // restore the dirty values\n\n      Object.keys(savedDirtyValues).forEach(function (key) {\n        formState.values = setIn(formState.values, key, savedDirtyValues[key]);\n      });\n      runValidation(undefined, function () {\n        notifyFieldListeners();\n        notifyFormListeners();\n      });\n    },\n    isValidationPaused: function isValidationPaused() {\n      return validationPaused;\n    },\n    pauseValidation: function pauseValidation() {\n      validationPaused = true;\n    },\n    registerField: function registerField(name, subscriber, subscription, fieldConfig) {\n      if (subscription === void 0) {\n        subscription = {};\n      }\n\n      if (!state.fieldSubscribers[name]) {\n        state.fieldSubscribers[name] = {\n          index: 0,\n          entries: {}\n        };\n      }\n\n      var index = state.fieldSubscribers[name].index++; // save field subscriber callback\n\n      state.fieldSubscribers[name].entries[index] = {\n        subscriber: memoize(subscriber),\n        subscription: subscription,\n        notified: false\n      };\n\n      if (!state.fields[name]) {\n        // create initial field state\n        state.fields[name] = {\n          active: false,\n          afterSubmit: fieldConfig && fieldConfig.afterSubmit,\n          beforeSubmit: fieldConfig && fieldConfig.beforeSubmit,\n          blur: function blur() {\n            return api.blur(name);\n          },\n          change: function change(value) {\n            return api.change(name, value);\n          },\n          data: fieldConfig && fieldConfig.data || {},\n          focus: function focus() {\n            return api.focus(name);\n          },\n          isEqual: fieldConfig && fieldConfig.isEqual || tripleEquals,\n          lastFieldState: undefined,\n          modified: false,\n          name: name,\n          touched: false,\n          valid: true,\n          validateFields: fieldConfig && fieldConfig.validateFields,\n          validators: {},\n          validating: false,\n          visited: false\n        };\n      }\n\n      var haveValidator = false;\n      var silent = fieldConfig && fieldConfig.silent;\n\n      var notify = function notify() {\n        if (silent) {\n          notifyFieldListeners(name);\n        } else {\n          notifyFormListeners();\n          notifyFieldListeners();\n        }\n      };\n\n      if (fieldConfig) {\n        haveValidator = !!(fieldConfig.getValidator && fieldConfig.getValidator());\n\n        if (fieldConfig.getValidator) {\n          state.fields[name].validators[index] = fieldConfig.getValidator;\n        }\n\n        if (fieldConfig.initialValue !== undefined && getIn(state.formState.values, name) === undefined // only initialize if we don't yet have any value for this field\n        ) {\n            state.formState.initialValues = setIn(state.formState.initialValues || {}, name, fieldConfig.initialValue);\n            state.formState.values = setIn(state.formState.values, name, fieldConfig.initialValue);\n            runValidation(undefined, notify);\n          }\n\n        if (fieldConfig.defaultValue !== undefined && fieldConfig.initialValue === undefined && getIn(state.formState.initialValues, name) === undefined) {\n          state.formState.values = setIn(state.formState.values, name, fieldConfig.defaultValue);\n        }\n      }\n\n      if (haveValidator) {\n        runValidation(undefined, notify);\n      } else {\n        notify();\n      }\n\n      return function () {\n        var validatorRemoved = false; // istanbul ignore next\n\n        if (state.fields[name]) {\n          // state.fields[name] may have been removed by a mutator\n          validatorRemoved = !!(state.fields[name].validators[index] && state.fields[name].validators[index]());\n          delete state.fields[name].validators[index];\n        }\n\n        delete state.fieldSubscribers[name].entries[index];\n        var lastOne = !Object.keys(state.fieldSubscribers[name].entries).length;\n\n        if (lastOne) {\n          delete state.fieldSubscribers[name];\n          delete state.fields[name];\n\n          if (validatorRemoved) {\n            state.formState.errors = setIn(state.formState.errors, name, undefined) || {};\n          }\n\n          if (destroyOnUnregister) {\n            state.formState.values = setIn(state.formState.values, name, undefined, true) || {};\n          }\n        }\n\n        if (!silent) {\n          if (validatorRemoved) {\n            runValidation(undefined, function () {\n              notifyFormListeners();\n              notifyFieldListeners();\n            });\n          } else if (lastOne) {\n            // values or errors may have changed\n            notifyFormListeners();\n          }\n        }\n      };\n    },\n    reset: function reset(initialValues) {\n      if (initialValues === void 0) {\n        initialValues = state.formState.initialValues;\n      }\n\n      if (state.formState.submitting) {\n        throw Error('Cannot reset() in onSubmit(), use setTimeout(form.reset)');\n      }\n\n      state.formState.submitFailed = false;\n      state.formState.submitSucceeded = false;\n      delete state.formState.submitError;\n      delete state.formState.submitErrors;\n      delete state.formState.lastSubmittedValues;\n      api.initialize(initialValues || {});\n    },\n\n    /**\n     * Resets all field flags (e.g. touched, visited, etc.) to their initial state\n     */\n    resetFieldState: function resetFieldState(name) {\n      state.fields[name] = _extends({}, state.fields[name], {}, {\n        active: false,\n        lastFieldState: undefined,\n        modified: false,\n        touched: false,\n        valid: true,\n        validating: false,\n        visited: false\n      });\n      runValidation(undefined, function () {\n        notifyFieldListeners();\n        notifyFormListeners();\n      });\n    },\n    resumeValidation: function resumeValidation() {\n      validationPaused = false;\n\n      if (validationBlocked) {\n        // validation was attempted while it was paused, so run it now\n        runValidation(undefined, function () {\n          notifyFieldListeners();\n          notifyFormListeners();\n        });\n      }\n\n      validationBlocked = false;\n    },\n    setConfig: function setConfig(name, value) {\n      switch (name) {\n        case 'debug':\n          debug = value;\n          break;\n\n        case 'destroyOnUnregister':\n          destroyOnUnregister = value;\n          break;\n\n        case 'initialValues':\n          api.initialize(value);\n          break;\n\n        case 'keepDirtyOnReinitialize':\n          keepDirtyOnReinitialize = value;\n          break;\n\n        case 'mutators':\n          mutators = value;\n\n          if (value) {\n            Object.keys(mutatorsApi).forEach(function (key) {\n              if (!(key in value)) {\n                delete mutatorsApi[key];\n              }\n            });\n            Object.keys(value).forEach(function (key) {\n              mutatorsApi[key] = getMutatorApi(key);\n            });\n          } else {\n            Object.keys(mutatorsApi).forEach(function (key) {\n              delete mutatorsApi[key];\n            });\n          }\n\n          break;\n\n        case 'onSubmit':\n          onSubmit = value;\n          break;\n\n        case 'validate':\n          validate = value;\n          runValidation(undefined, function () {\n            notifyFieldListeners();\n            notifyFormListeners();\n          });\n          break;\n\n        case 'validateOnBlur':\n          validateOnBlur = value;\n          break;\n\n        default:\n          throw new Error('Unrecognised option ' + name);\n      }\n    },\n    submit: function submit() {\n      var formState = state.formState;\n\n      if (formState.submitting) {\n        return;\n      }\n\n      if (hasSyncErrors()) {\n        markAllFieldsTouched();\n        state.formState.submitFailed = true;\n        notifyFormListeners();\n        notifyFieldListeners();\n        return; // no submit for you!!\n      }\n\n      var asyncValidationPromisesKeys = Object.keys(asyncValidationPromises);\n\n      if (asyncValidationPromisesKeys.length) {\n        // still waiting on async validation to complete...\n        Promise.all(asyncValidationPromisesKeys.map(function (key) {\n          return asyncValidationPromises[Number(key)];\n        })).then(api.submit, console.error);\n        return;\n      }\n\n      var submitIsBlocked = beforeSubmit();\n\n      if (submitIsBlocked) {\n        return;\n      }\n\n      var resolvePromise;\n      var completeCalled = false;\n\n      var complete = function complete(errors) {\n        formState.submitting = false;\n\n        if (errors && hasAnyError(errors)) {\n          formState.submitFailed = true;\n          formState.submitSucceeded = false;\n          formState.submitErrors = errors;\n          formState.submitError = errors[FORM_ERROR];\n          markAllFieldsTouched();\n        } else {\n          formState.submitFailed = false;\n          formState.submitSucceeded = true;\n          afterSubmit();\n        }\n\n        notifyFormListeners();\n        notifyFieldListeners();\n        completeCalled = true;\n\n        if (resolvePromise) {\n          resolvePromise(errors);\n        }\n\n        return errors;\n      };\n\n      delete formState.submitErrors;\n      delete formState.submitError;\n      formState.submitting = true;\n      formState.submitFailed = false;\n      formState.submitSucceeded = false;\n      formState.lastSubmittedValues = _extends({}, formState.values); // onSubmit is either sync, callback or async with a Promise\n\n      var result = onSubmit(formState.values, api, complete);\n\n      if (!completeCalled) {\n        if (result && isPromise(result)) {\n          // onSubmit is async with a Promise\n          notifyFormListeners(); // let everyone know we are submitting\n\n          notifyFieldListeners(); // notify fields also\n\n          return result.then(complete, function (error) {\n            complete();\n            throw error;\n          });\n        } else if (onSubmit.length >= 3) {\n          // must be async, so we should return a Promise\n          notifyFormListeners(); // let everyone know we are submitting\n\n          notifyFieldListeners(); // notify fields also\n\n          return new Promise(function (resolve) {\n            resolvePromise = resolve;\n          });\n        } else {\n          // onSubmit is sync\n          complete(result);\n        }\n      }\n    },\n    subscribe: function subscribe(subscriber, subscription) {\n      if (!subscriber) {\n        throw new Error('No callback given.');\n      }\n\n      if (!subscription) {\n        throw new Error('No subscription provided. What values do you want to listen to?');\n      }\n\n      var memoized = memoize(subscriber);\n      var subscribers = state.subscribers;\n      var index = subscribers.index++;\n      subscribers.entries[index] = {\n        subscriber: memoized,\n        subscription: subscription,\n        notified: false\n      };\n      var nextFormState = calculateNextFormState();\n      notifySubscriber(memoized, subscription, nextFormState, nextFormState, filterFormState, true);\n      return function () {\n        delete subscribers.entries[index];\n      };\n    }\n  };\n  return api;\n}\n\nexport { ARRAY_ERROR, FORM_ERROR, configOptions, createForm, fieldSubscriptionItems, formSubscriptionItems, getIn, setIn, version };\n"],"sourceRoot":""}